############################
# Copyrightc 2022 FUJITSU LIMITED
# FileName: CFN-OQS-MNT-NW01_20221116.yml
# FileType: YAML
# OverViews: CloudFormation Template for MNT Network
# Version: 1.0
# Author: Fujitsu - ichikawa
############################
AWSTemplateFormatVersion: 2010-09-09

# Transform:
#   Name: 'AWS::Include'
#   Parameters:
#     Location: !Sub '${MappingFilePATH}'


Parameters:
  #  ## user form  ##
  #  :param SystemNameLower: ['oqs','tkk','irk','yzk']  システム名称(小文字)
  #  :param EnvironmentNameLower:　['dev','mnt','stg','pro','mt1','mt2']  環境名（小文字）
  #  :param VPCID:
  #  :param CloudWatchLogsKeyID:
  #  :param elasticfilesystemKeyID:  EFSキー
  #  :param ebsKeyID:
  #  :param rdsKeyID:
  #  ## user form  ##

  SystemNameLower:
    Type: String
    Default: oqs
    AllowedValues: ['oqs','tkk','irk','yzk'] 
  EnvironmentNameLower:
    Type: String
    Default: dev
    AllowedValues: ['dev','mnt','stg','pro','mt1','mt2']      

  # DataBaseName:
  #   Type: String
  #   Default: qsh
  # MappingFilePATH:
  #   Type: String
  #   Default: 'example: s3://'
  VPCID:
    Type: AWS::EC2::VPC::Id
  CloudWatchLogsKeyID:
    Type: String
  elasticfilesystemKeyID:
    Type: String
  ebsKeyID:
    Type: String
  rdsKeyID:
    Type: String
  


# Conditions:
#   IsStg: !Equals 
#     - !Ref EnvironmentNameLower
#     - stg
#   IsNotStg: !Not 
#     - !Equals 
#       - !Ref EnvironmentNameLower
#       - stg

Resources:
    # ConfigDeliveryChannel:
    #     Type: "AWS::Config::DeliveryChannel"
    #     Properties:
    #         Name: "default"
    #         S3BucketName:  "cfn-ichikawa-test"
    #         # S3BucketName:  !Sub "s3-${SystemNameLower}-cmn-awsconfig01"
    #         # SnsTopicARN: !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:SNS-${SystemNameLower}-cmn-ConfigEvents01"
    #         ConfigSnapshotDeliveryProperties: 
    #             DeliveryFrequency: "TwentyFour_Hours"

    # ConfigConfigRule:
    #     Type: "AWS::Config::ConfigRule"
    #     Properties:
    #         ConfigRuleName: "access-keys-rotated"
    #         Scope: {}
    #         Source: 
    #             Owner: "AWS"
    #             SourceIdentifier: "ACCESS_KEYS_ROTATED"
    #         InputParameters: "{\"maxAccessKeyAge\":\"1\"}"
    #         MaximumExecutionFrequency: "TwentyFour_Hours"

    # ConfigConfigRule2:
    #     Type: "AWS::Config::ConfigRule"
    #     Properties:
    #         ConfigRuleName: "acm-certificate-expiration-check"
    #         Scope: 
    #             ComplianceResourceTypes: 
    #               - "AWS::ACM::Certificate"
    #         Source: 
    #             Owner: "AWS"
    #             SourceIdentifier: "ACM_CERTIFICATE_EXPIRATION_CHECK"
    #         InputParameters: "{\"daysToExpiration\":\"14\"}"
    #         MaximumExecutionFrequency: "TwentyFour_Hours"

    ConfigConfigRule3:
        Type: "AWS::Config::ConfigRule"
        Properties:
            ConfigRuleName: "api-gw-endpoint-type-check"
        
            Scope: 
                ComplianceResourceTypes: 
                  - "AWS::ApiGateway::RestApi"
            Source: 
                Owner: "AWS"
                SourceIdentifier: "API_GW_ENDPOINT_TYPE_CHECK"
            InputParameters: "{\"endpointConfigurationTypes\":\"PRIVATE\"}"

    ConfigConfigRule4:
        Type: "AWS::Config::ConfigRule"
        Properties:
            ConfigRuleName: "api-gw-execution-logging-enabled"
            Scope: 
                ComplianceResourceTypes: 
                  - "AWS::ApiGateway::Stage"
                  - "AWS::ApiGatewayV2::Stage"
            Source: 
                Owner: "AWS"
                SourceIdentifier: "API_GW_EXECUTION_LOGGING_ENABLED"
            InputParameters: "{\"loggingLevel\":\"ERROR,INFO\"}"

    # ConfigConfigRule5:
    #     Type: "AWS::Config::ConfigRule"
    #     Properties:
    #         ConfigRuleName: "cloud-trail-cloud-watch-logs-enabled"
    #         Scope: {}
    #         Source: 
    #             Owner: "AWS"
    #             SourceIdentifier: "CLOUD_TRAIL_CLOUD_WATCH_LOGS_ENABLED"
    #         InputParameters: "{\"expectedDeliveryWindowAge\":\"2\"}"
    #         MaximumExecutionFrequency: "TwentyFour_Hours"

    ConfigConfigRule6:
        Type: "AWS::Config::ConfigRule"
        Properties:
            ConfigRuleName: "cloud-trail-encryption-enabled"
            Scope: {}
            Source: 
                Owner: "AWS"
                SourceIdentifier: "CLOUD_TRAIL_ENCRYPTION_ENABLED"
            InputParameters: "{}"
            MaximumExecutionFrequency: "TwentyFour_Hours"

    # ConfigConfigRule7:
    #     Type: "AWS::Config::ConfigRule"
    #     Properties:
    #         ConfigRuleName: "cloud-trail-log-file-validation-enabled"
    #         Scope: {}
    #         Source: 
    #             Owner: "AWS"
    #             SourceIdentifier: "CLOUD_TRAIL_LOG_FILE_VALIDATION_ENABLED"
    #         InputParameters: "{}"
    #         MaximumExecutionFrequency: "TwentyFour_Hours"

    ConfigConfigRule9:
        Type: "AWS::Config::ConfigRule"
        Properties:
            ConfigRuleName: "cloudtrail-enabled"
            Scope: {}
            Source: 
                Owner: "AWS"
                SourceIdentifier: "CLOUD_TRAIL_ENABLED"
            InputParameters: "{}"
            MaximumExecutionFrequency: "TwentyFour_Hours"

    ConfigConfigRule10:
        Type: "AWS::Config::ConfigRule"
        Properties:
            ConfigRuleName: "cloudtrail-s3-dataevents-enabled"
            Scope: {}
            Source: 
                Owner: "AWS"
                SourceIdentifier: "CLOUDTRAIL_S3_DATAEVENTS_ENABLED"
            InputParameters: "{}"
            MaximumExecutionFrequency: "TwentyFour_Hours"

    # ConfigConfigRule11:
    #     Type: "AWS::Config::ConfigRule"
    #     Properties:
    #         ConfigRuleName: "cloudwatch-log-group-encrypted"
    #         Scope: {}
    #         Source: 
    #             Owner: "AWS"
    #             SourceIdentifier: "CLOUDWATCH_LOG_GROUP_ENCRYPTED"
    #         InputParameters: !Sub "{\"KmsKeyId\":\"arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/${CloudWatchLogsKeyID}\"}"
    #         MaximumExecutionFrequency: "TwentyFour_Hours"

    # ConfigConfigRule12:
    #     Type: "AWS::Config::ConfigRule"
    #     Properties:
    #         ConfigRuleName: "cmk-backing-key-rotation-enabled"
    #         Scope: {}
    #         Source: 
    #             Owner: "AWS"
    #             SourceIdentifier: "CMK_BACKING_KEY_ROTATION_ENABLED"
    #         InputParameters: "{}"
    #         MaximumExecutionFrequency: "TwentyFour_Hours"

    # ConfigConfigRule13:
    #     Type: "AWS::Config::ConfigRule"
    #     Properties:
    #         ConfigRuleName: "codebuild-project-envvar-awscred-check"
    #         Scope: 
    #             ComplianceResourceTypes: 
    #               - "AWS::CodeBuild::Project"
    #         Source: 
    #             Owner: "AWS"
    #             SourceIdentifier: "CODEBUILD_PROJECT_ENVVAR_AWSCRED_CHECK"
    #         InputParameters: "{}"

    ConfigConfigRule14:
        Type: "AWS::Config::ConfigRule"
        Properties:
            ConfigRuleName: "codepipeline-deployment-count-check"
            Scope: 
                ComplianceResourceTypes: 
                  - "AWS::CodePipeline::Pipeline"
            Source: 
                Owner: "AWS"
                SourceIdentifier: "CODEPIPELINE_DEPLOYMENT_COUNT_CHECK"
            InputParameters: "{\"deploymentLimit\":\"1\"}"

    # ConfigConfigRule15:
    #     Type: "AWS::Config::ConfigRule"
    #     Properties:
    #         ConfigRuleName: "db-instance-backup-enabled"
    #         Scope: 
    #             ComplianceResourceTypes: 
    #               - "AWS::RDS::DBInstance"
    #         Source: 
    #             Owner: "AWS"
    #             SourceIdentifier: "DB_INSTANCE_BACKUP_ENABLED"
    #         InputParameters: "{\"backupRetentionPeriod\":\"7\"}"

    # ConfigConfigRule16:
    #     Type: "AWS::Config::ConfigRule"
    #     Properties:
    #         ConfigRuleName: "desired-instance-type"
    #         Scope: 
    #             ComplianceResourceTypes: 
    #               - "AWS::EC2::Instance"
    #         Source: 
    #             Owner: "AWS"
    #             SourceIdentifier: "DESIRED_INSTANCE_TYPE"
    #         InputParameters: "{\"instanceType\":\"r5.xlarge,r5.4xlarge,m4.xlarge,m5.large,m4.large,m4.xlarge,m4.2xlarge,m4.4xlarge,m4.10xlarge,m4.16xlarge,c4.large,c4.xlarge,c4.2xlarge,c4.4xlarge,c4.8xlarge,r4.large,r4.xlarge,r4.2xlarge,r4.4xlarge,r4.8xlarge,r4.16xlarge,r5.2xlarge\"}"

    # ConfigConfigRule17:
    #     Type: "AWS::Config::ConfigRule"
    #     Properties:
    #         ConfigRuleName: "dynamodb-table-encryption-enabled"
    #         Scope: 
    #             ComplianceResourceTypes: 
    #               - "AWS::DynamoDB::Table"
    #         Source: 
    #             Owner: "AWS"
    #             SourceIdentifier: "DYNAMODB_TABLE_ENCRYPTION_ENABLED"
    #         InputParameters: "{}"

    # ConfigConfigRule18:
    #     Type: "AWS::Config::ConfigRule"
    #     Properties:
    #         ConfigRuleName: "ebs-optimized-instance"
    #         Scope: 
    #             ComplianceResourceTypes: 
    #               - "AWS::EC2::Instance"
    #         Source: 
    #             Owner: "AWS"
    #             SourceIdentifier: "EBS_OPTIMIZED_INSTANCE"
    #         InputParameters: "{}"

    # ConfigConfigRule19:
    #     Type: "AWS::Config::ConfigRule"
    #     Properties:
    #         ConfigRuleName: "ebs-snapshot-public-restorable-check"
    #         Scope: {}
    #         Source: 
    #             Owner: "AWS"
    #             SourceIdentifier: "EBS_SNAPSHOT_PUBLIC_RESTORABLE_CHECK"
    #         InputParameters: "{}"
    #         MaximumExecutionFrequency: "TwentyFour_Hours"

    ConfigConfigRule20:
        Type: "AWS::Config::ConfigRule"
        Properties:
            ConfigRuleName: "ec2-instance-detailed-monitoring-enabled"
            Scope: 
                ComplianceResourceTypes: 
                  - "AWS::EC2::Instance"
            Source: 
                Owner: "AWS"
                SourceIdentifier: "EC2_INSTANCE_DETAILED_MONITORING_ENABLED"
            InputParameters: "{}"

    ConfigConfigRule21:
        Type: "AWS::Config::ConfigRule"
        Properties:
            ConfigRuleName: "ec2-instance-no-public-ip"
            Scope: 
                ComplianceResourceTypes: 
                  - "AWS::EC2::Instance"
            Source: 
                Owner: "AWS"
                SourceIdentifier: "EC2_INSTANCE_NO_PUBLIC_IP"
            InputParameters: "{}"

    # ConfigConfigRule22:
    #     Type: "AWS::Config::ConfigRule"
    #     Properties:
    #         ConfigRuleName: "ec2-volume-inuse-check"
    #         Scope: 
    #             ComplianceResourceTypes: 
    #               - "AWS::EC2::Volume"
    #         Source: 
    #             Owner: "AWS"
    #             SourceIdentifier: "EC2_VOLUME_INUSE_CHECK"
    #         InputParameters: "{\"deleteOnTermination\":\"True\"}"

    ConfigConfigRule23:
        Type: "AWS::Config::ConfigRule"
        Properties:
            ConfigRuleName: "efs-encrypted-check"
            Scope: {}
            Source: 
                Owner: "AWS"
                SourceIdentifier: "EFS_ENCRYPTED_CHECK"
            InputParameters: !Sub "{\"KmsKeyId\":\"arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/${elasticfilesystemKeyID}\"}"
            MaximumExecutionFrequency: "TwentyFour_Hours"

    # ConfigConfigRule24:
    #     Type: "AWS::Config::ConfigRule"
    #     Properties:
    #         ConfigRuleName: "eip-attached"
    #         Scope: 
    #             ComplianceResourceTypes: 
    #               - "AWS::EC2::EIP"
    #         Source: 
    #             Owner: "AWS"
    #             SourceIdentifier: "EIP_ATTACHED"
    #         InputParameters: "{}"

    ConfigConfigRule25:
        Type: "AWS::Config::ConfigRule"
        Properties:
            ConfigRuleName: "elb-deletion-protection-enabled"
            Scope: 
                ComplianceResourceTypes: 
                  - "AWS::ElasticLoadBalancingV2::LoadBalancer"
            Source: 
                Owner: "AWS"
                SourceIdentifier: "ELB_DELETION_PROTECTION_ENABLED"
            InputParameters: "{}"

    # ConfigConfigRule26:
    #     Type: "AWS::Config::ConfigRule"
    #     Properties:
    #         ConfigRuleName: "elb-logging-enabled"
    #         Scope: 
    #             ComplianceResourceTypes: 
    #               - "AWS::ElasticLoadBalancing::LoadBalancer"
    #               - "AWS::ElasticLoadBalancingV2::LoadBalancer"
    #         Source: 
    #             Owner: "AWS"
    #             SourceIdentifier: "ELB_LOGGING_ENABLED"
    #         InputParameters: !Sub "{\"s3BucketNames\":\"s3-${SystemNameLower}-mt1-alb-log,s3-${SystemNameLower}-mt2-alb-log,s3-${SystemNameLower}-stg-alb-log,s3-${SystemNameLower}-st2-alb-log\"}"

    ConfigConfigRule27:
        Type: "AWS::Config::ConfigRule"
        Properties:
            ConfigRuleName: "encrypted-volumes"
            Scope: 
                ComplianceResourceTypes: 
                  - "AWS::EC2::Volume"
            Source: 
                Owner: "AWS"
                SourceIdentifier: "ENCRYPTED_VOLUMES"
            InputParameters: !Sub "{\"kmsId\":\"${ebsKeyID}\"}"

    # ConfigConfigRule28:
    #     Type: "AWS::Config::ConfigRule"
    #     Properties:
    #         ConfigRuleName: "guardduty-enabled-centralized"
    #         Scope: {}
    #         Source: 
    #             Owner: "AWS"
    #             SourceIdentifier: "GUARDDUTY_ENABLED_CENTRALIZED"
    #         InputParameters: "{}"
    #         MaximumExecutionFrequency: "TwentyFour_Hours"

    # ConfigConfigRule29:
    #     Type: "AWS::Config::ConfigRule"
    #     Properties:
    #         ConfigRuleName: "guardduty-non-archived-findings"
    #         Scope: {}
    #         Source: 
    #             Owner: "AWS"
    #             SourceIdentifier: "GUARDDUTY_NON_ARCHIVED_FINDINGS"
    #         InputParameters: "{\"daysLowSev\":\"30\",\"daysMediumSev\":\"7\",\"daysHighSev\":\"1\"}"
    #         MaximumExecutionFrequency: "TwentyFour_Hours"

    ConfigConfigRule30:
        Type: "AWS::Config::ConfigRule"
        Properties:
            ConfigRuleName: "iam-password-policy"
            Scope: {}
            Source: 
                Owner: "AWS"
                SourceIdentifier: "IAM_PASSWORD_POLICY"
            InputParameters: "{\"RequireUppercaseCharacters\":\"true\",\"RequireLowercaseCharacters\":\"true\",\"RequireSymbols\":\"true\",\"RequireNumbers\":\"true\",\"MinimumPasswordLength\":\"8\",\"PasswordReusePrevention\":\"6\",\"MaxPasswordAge\":\"90\"}"
            MaximumExecutionFrequency: "TwentyFour_Hours"

    ConfigConfigRule31:
        Type: "AWS::Config::ConfigRule"
        Properties:
            ConfigRuleName: "iam-policy-no-statements-with-admin-access"
            Scope: 
                ComplianceResourceTypes: 
                  - "AWS::IAM::Policy"
            Source: 
                Owner: "AWS"
                SourceIdentifier: "IAM_POLICY_NO_STATEMENTS_WITH_ADMIN_ACCESS"
            InputParameters: "{}"

    # ConfigConfigRule32:
    #     Type: "AWS::Config::ConfigRule"
    #     Properties:
    #         ConfigRuleName: "iam-root-access-key-check"
    #         Scope: {}
    #         Source: 
    #             Owner: "AWS"
    #             SourceIdentifier: "IAM_ROOT_ACCESS_KEY_CHECK"
    #         InputParameters: "{}"
    #         MaximumExecutionFrequency: "TwentyFour_Hours"

    # ConfigConfigRule34:
    #     Type: "AWS::Config::ConfigRule"
    #     Properties:
    #         ConfigRuleName: "iam-user-mfa-enabled"
    #         Scope: {}
    #         Source: 
    #             Owner: "AWS"
    #             SourceIdentifier: "IAM_USER_MFA_ENABLED"
    #         InputParameters: "{}"
    #         MaximumExecutionFrequency: "TwentyFour_Hours"

    # ConfigConfigRule35:
    #     Type: "AWS::Config::ConfigRule"
    #     Properties:
    #         ConfigRuleName: "iam-user-no-policies-check"
    #         Scope: 
    #             ComplianceResourceTypes: 
    #               - "AWS::IAM::User"
    #         Source: 
    #             Owner: "AWS"
    #             SourceIdentifier: "IAM_USER_NO_POLICIES_CHECK"
    #         InputParameters: "{}"

    # ConfigConfigRule36:
    #     Type: "AWS::Config::ConfigRule"
    #     Properties:
    #         ConfigRuleName: "internet-gateway-authorized-vpc-only"
    #         Scope: 
    #             ComplianceResourceTypes: 
    #               - "AWS::EC2::InternetGateway"
    #         Source: 
    #             Owner: "AWS"
    #             SourceIdentifier: "INTERNET_GATEWAY_AUTHORIZED_VPC_ONLY"
    #         InputParameters: !Sub "{\"AuthorizedVpcIds\": \"${VPCID}\"}"

    # ConfigConfigRule37:
    #     Type: "AWS::Config::ConfigRule"
    #     Properties:
    #         ConfigRuleName: "kms-cmk-not-scheduled-for-deletion"
    #         Scope: 
    #             ComplianceResourceTypes: 
    #               - "AWS::KMS::Key"
    #         Source: 
    #             Owner: "AWS"
    #             SourceIdentifier: "KMS_CMK_NOT_SCHEDULED_FOR_DELETION"
    #         InputParameters: "{}"
    #         MaximumExecutionFrequency: "TwentyFour_Hours"

    # ConfigConfigRule38:
    #     Type: "AWS::Config::ConfigRule"
    #     Properties:
    #         ConfigRuleName: "lambda-function-public-access-prohibited"
    #         Scope: 
    #             ComplianceResourceTypes: 
    #               - "AWS::Lambda::Function"
    #         Source: 
    #             Owner: "AWS"
    #             SourceIdentifier: "LAMBDA_FUNCTION_PUBLIC_ACCESS_PROHIBITED"
    #         InputParameters: "{}"

    # ConfigConfigRule40:
    #     Type: "AWS::Config::ConfigRule"
    #     Properties:
    #         ConfigRuleName: "mfa-enabled-for-iam-console-access"
    #         Scope: {}
    #         Source: 
    #             Owner: "AWS"
    #             SourceIdentifier: "MFA_ENABLED_FOR_IAM_CONSOLE_ACCESS"
    #         InputParameters: "{}"
    #         MaximumExecutionFrequency: "TwentyFour_Hours"

    ConfigConfigRule41:
        Type: "AWS::Config::ConfigRule"
        Properties:
            ConfigRuleName: !Sub "multi-region-${ConfigConfigRule9}"
            Scope: {}
            Source: 
                Owner: "AWS"
                SourceIdentifier: "MULTI_REGION_CLOUD_TRAIL_ENABLED"
            InputParameters: "{}"
            MaximumExecutionFrequency: "TwentyFour_Hours"

    # ConfigConfigRule42:
    #     Type: "AWS::Config::ConfigRule"
    #     Properties:
    #         ConfigRuleName: "rds-enhanced-monitoring-enabled"
    #         Scope: 
    #             ComplianceResourceTypes: 
    #               - "AWS::RDS::DBInstance"
    #         Source: 
    #             Owner: "AWS"
    #             SourceIdentifier: "RDS_ENHANCED_MONITORING_ENABLED"
    #         InputParameters: "{\"monitoringInterval\":\"60\"}"

    # ConfigConfigRule43:
    #     Type: "AWS::Config::ConfigRule"
    #     Properties:
    #         ConfigRuleName: "rds-instance-public-access-check"
    #         Scope: 
    #             ComplianceResourceTypes: 
    #               - "AWS::RDS::DBInstance"
    #         Source: 
    #             Owner: "AWS"
    #             SourceIdentifier: "RDS_INSTANCE_PUBLIC_ACCESS_CHECK"
    #         InputParameters: "{}"

    ConfigConfigRule44:
        Type: "AWS::Config::ConfigRule"
        Properties:
            ConfigRuleName: "rds-snapshots-public-prohibited"
            Scope: 
                ComplianceResourceTypes: 
                  - "AWS::RDS::DBSnapshot"
                  - "AWS::RDS::DBClusterSnapshot"
            Source: 
                Owner: "AWS"
                SourceIdentifier: "RDS_SNAPSHOTS_PUBLIC_PROHIBITED"
            InputParameters: "{}"

    # ConfigConfigRule45:
    #     Type: "AWS::Config::ConfigRule"
    #     Properties:
    #         ConfigRuleName: "rds-storage-encrypted"
    #         Scope: 
    #             ComplianceResourceTypes: 
    #               - "AWS::RDS::DBInstance"
    #         Source: 
    #             Owner: "AWS"
    #             SourceIdentifier: "RDS_STORAGE_ENCRYPTED"
    #         InputParameters: !Sub "{\"kmsKeyId\":\"arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/${rdsKeyID}\"}"

    # ConfigConfigRule46:
    #     Type: "AWS::Config::ConfigRule"
    #     Properties:
    #         ConfigRuleName: "required-tags"
    #         Scope: 
    #             ComplianceResourceTypes: 
    #               - "AWS::ACM::Certificate"
    #               - "AWS::AutoScaling::AutoScalingGroup"
    #               - "AWS::CloudFormation::Stack"
    #               - "AWS::CodeBuild::Project"
    #               - "AWS::DynamoDB::Table"
    #               - "AWS::EC2::CustomerGateway"
    #               - "AWS::EC2::Instance"
    #               - "AWS::EC2::InternetGateway"
    #               - "AWS::EC2::NetworkAcl"
    #               - "AWS::EC2::NetworkInterface"
    #               - "AWS::EC2::RouteTable"
    #               - "AWS::EC2::SecurityGroup"
    #               - "AWS::EC2::Subnet"
    #               - "AWS::EC2::Volume"
    #               - "AWS::EC2::VPC"
    #               - "AWS::EC2::VPNConnection"
    #               - "AWS::EC2::VPNGateway"
    #               - "AWS::ElasticLoadBalancing::LoadBalancer"
    #               - "AWS::ElasticLoadBalancingV2::LoadBalancer"
    #               - "AWS::RDS::DBInstance"
    #               - "AWS::RDS::DBSecurityGroup"
    #               - "AWS::RDS::DBSnapshot"
    #               - "AWS::RDS::DBSubnetGroup"
    #               - "AWS::RDS::EventSubscription"
    #               - "AWS::Redshift::Cluster"
    #               - "AWS::Redshift::ClusterParameterGroup"
    #               - "AWS::Redshift::ClusterSecurityGroup"
    #               - "AWS::Redshift::ClusterSnapshot"
    #               - "AWS::Redshift::ClusterSubnetGroup"
    #               - "AWS::S3::Bucket"
    #         Source: 
    #             Owner: "AWS"
    #             SourceIdentifier: "REQUIRED_TAGS"
    #         InputParameters: "{\"tag1Key\":\"BillingGroup\"}"

    # ConfigConfigRule47:
    #     Type: "AWS::Config::ConfigRule"
    #     Properties:
    #         ConfigRuleName: "restricted-common-ports"
    #         Scope: 
    #             ComplianceResourceTypes: 
    #               - "AWS::EC2::SecurityGroup"
    #         Source: 
    #             Owner: "AWS"
    #             SourceIdentifier: "RESTRICTED_INCOMING_TRAFFIC"
    #         InputParameters: "{\"blockedPort1\":\"2049\",\"blockedPort2\":\"443\",\"blockedPort3\":\"5432\"}"

    ConfigConfigRule48:
        Type: "AWS::Config::ConfigRule"
        Properties:
            ConfigRuleName: "restricted-ssh"
            Scope: 
                ComplianceResourceTypes: 
                  - "AWS::EC2::SecurityGroup"
            Source: 
                Owner: "AWS"
                SourceIdentifier: "INCOMING_SSH_DISABLED"
            InputParameters: "{}"

    # ConfigConfigRule49:
    #     Type: "AWS::Config::ConfigRule"
    #     Properties:
    #         ConfigRuleName: "root-account-hardware-mfa-enabled"
    #         Scope: {}
    #         Source: 
    #             Owner: "AWS"
    #             SourceIdentifier: "ROOT_ACCOUNT_HARDWARE_MFA_ENABLED"
    #         InputParameters: "{}"
    #         MaximumExecutionFrequency: "TwentyFour_Hours"

    ConfigConfigRule50:
        Type: "AWS::Config::ConfigRule"
        Properties:
            ConfigRuleName: "root-account-mfa-enabled"
            Scope: {}
            Source: 
                Owner: "AWS"
                SourceIdentifier: "ROOT_ACCOUNT_MFA_ENABLED"
            InputParameters: "{}"
            MaximumExecutionFrequency: "TwentyFour_Hours"

    ConfigConfigRule53:
        Type: "AWS::Config::ConfigRule"
        Properties:
            ConfigRuleName: "s3-bucket-logging-enabled"
            Scope: 
                TagKey: "Logging Enabled"
                TagValue: "true"
            Source: 
                Owner: "AWS"
                SourceIdentifier: "S3_BUCKET_LOGGING_ENABLED"
            InputParameters: "{}"

    # ConfigConfigRule77:
    #     Type: "AWS::Config::ConfigRule"
    #     Properties:
    #         ConfigRuleName: "s3-bucket-public-read-prohibited"
    #         Scope: 
    #             ComplianceResourceTypes: 
    #               - "AWS::S3::Bucket"
    #         Source: 
    #             Owner: "AWS"
    #             SourceIdentifier: "S3_BUCKET_PUBLIC_READ_PROHIBITED"
    #         InputParameters: "{}"
    #         MaximumExecutionFrequency: "TwentyFour_Hours"

    # ConfigConfigRule78:
    #     Type: "AWS::Config::ConfigRule"
    #     Properties:
    #         ConfigRuleName: "s3-bucket-public-write-prohibited"
    #         Scope: 
    #             ComplianceResourceTypes: 
    #               - "AWS::S3::Bucket"
    #         Source: 
    #             Owner: "AWS"
    #             SourceIdentifier: "S3_BUCKET_PUBLIC_WRITE_PROHIBITED"
    #         InputParameters: "{}"
    #         MaximumExecutionFrequency: "TwentyFour_Hours"

    # ConfigConfigRule79:
    #     Type: "AWS::Config::ConfigRule"
    #     Properties:
    #         ConfigRuleName: "s3-bucket-replication-enabled"
    #         Scope: 
    #             TagKey: "Bucket Replication enabled"
    #             TagValue: "true"
    #         Source: 
    #             Owner: "AWS"
    #             SourceIdentifier: "S3_BUCKET_REPLICATION_ENABLED"
    #         InputParameters: "{}"

    # ConfigConfigRule80:
    #     Type: "AWS::Config::ConfigRule"
    #     Properties:
    #         ConfigRuleName: "s3-bucket-server-side-encryption-enabled"
    #         Scope: 
    #             TagKey: "Encryption Enabled"
    #             TagValue: "true"
    #         Source: 
    #             Owner: "AWS"
    #             SourceIdentifier: "S3_BUCKET_SERVER_SIDE_ENCRYPTION_ENABLED"
    #         InputParameters: "{}"
    # ConfigConfigRule114:
    #     Type: "AWS::Config::ConfigRule"
    #     Properties:
    #         ConfigRuleName: !Sub "${ConfigConfigRule113}-agent"
    #         Description: "???[???p?????[?^??w????????T?[?r?X??T?[?r?X?G???h?|?C???g???e Amazon VPC ???????????????????????m?F??????B?T?[?r?X??????????? VPC ?G???h?|?C???g?? Amazon VPC ???????A???[???? NON_COMPLIANT ????B"
    #         Scope: {}
    #         Source: 
    #             Owner: "AWS"
    #             SourceIdentifier: "SERVICE_VPC_ENDPOINT_ENABLED"
    #         InputParameters: !Sub "{\"serviceName\":\"com.amazonaws.${AWS::Region}.ecs-agent\"}"
    #         MaximumExecutionFrequency: "TwentyFour_Hours"

    ConfigConfigRule120:
        Type: "AWS::Config::ConfigRule"
        Properties:
            ConfigRuleName: "vpc-default-security-group-closed"

            Scope: 
                ComplianceResourceTypes: 
                  - "AWS::EC2::SecurityGroup"
            Source: 
                Owner: "AWS"
                SourceIdentifier: "VPC_DEFAULT_SECURITY_GROUP_CLOSED"
            InputParameters: "{}"

    ConfigConfigRule121:
        Type: "AWS::Config::ConfigRule"
        Properties:
            ConfigRuleName: "vpc-flow-logs-enabled"
            Scope: {}
            Source: 
                Owner: "AWS"
                SourceIdentifier: "VPC_FLOW_LOGS_ENABLED"
            InputParameters: "{\"trafficType\":\"ALL\"}"
            MaximumExecutionFrequency: "TwentyFour_Hours"

    ConfigConfigRule122:
        Type: "AWS::Config::ConfigRule"
        Properties:
            ConfigRuleName: "vpc-sg-open-only-to-authorized-ports"
            Scope: 
                ComplianceResourceTypes: 
                  - "AWS::EC2::SecurityGroup"
            Source: 
                Owner: "AWS"
                SourceIdentifier: "VPC_SG_OPEN_ONLY_TO_AUTHORIZED_PORTS"
            InputParameters: "{}"

    ConfigConfigRule123:
        Type: "AWS::Config::ConfigRule"
        Properties:
            ConfigRuleName: "elasticsearch-in-vpc-only"
            Scope: {}
            Source: 
                Owner: "AWS"
                SourceIdentifier: "ELASTICSEARCH_IN_VPC_ONLY"
            MaximumExecutionFrequency: "TwentyFour_Hours"
            InputParameters: "{}"
                
    ConfigConfigRule125:
        Type: "AWS::Config::ConfigRule"
        Properties:
            ConfigRuleName: "elasticsearch-encrypted-at-rest"
            Scope: {}
            Source: 
                Owner: "AWS"
                SourceIdentifier:  "ELASTICSEARCH_ENCRYPTED_AT_REST"
            MaximumExecutionFrequency: "TwentyFour_Hours"
            InputParameters: "{}"

    ConfigConfigRule126:
        Type: "AWS::Config::ConfigRule"
        Properties:
            ConfigRuleName:  "ec2-instance-managed-by-systems-manager"
            Scope: 
                TagKey: "Patch Group"
                TagValue:  "{SSM-OQS-CMN-LinuxPG01,SSM-OQS-CMN-WindowsPG01}"
            Source: 
                Owner: "AWS"
                SourceIdentifier:  "EC2_INSTANCE_MANAGED_BY_SSM"
            InputParameters: "{}"