############################
# Copyrightc 2022 FUJITSU LIMITED
# FileName: CFN-IRK-NW01_202212.yml
# FileType: YAML
# OverViews: CloudFormation Template for MNT Network
# Version: 1.0
# Author: Fujitsu - ichikawa
############################

AWSTemplateFormatVersion: "2010-09-09"

Transform:
  Name: 'AWS::Include'
  Parameters:
    Location: !Sub '${MappingFilePATH}'

Parameters:
  #  ## user form  ##
  #  :param SystemNameUpper: システム名称
  #  :param EnvironmentNameUpper: 環境名
  #  :param MappingFilePASS: mappingファイルS3パス

  MappingFilePATH:
    Type: String
    Default: 'example: s3://'
  SystemNameUpper:
    Type: String
    Default: 'IRK'
    AllowedValues: ['OQS','IRK','TKK','YZK']
  SystemNameLower:
    Type: String
    Default: 'irk'
    AllowedValues: ['oqs','irk','tkk','yzk']
  EnvironmentNameUpper:
    Type: String
    Default: 'MNT'
    AllowedValues: ['MNT','DEV','STG','PRO','MT1','MT2','ST1','ST2']
  EnvironmentNameLower:
    Type: String
    Default: 'mnt'
    AllowedValues: ['mnt','dev','stg','pro','mt1','mt2','st1','st2']
  EnvironmentNameUpper2:
    Type: String
    Default: 'MT2'
    AllowedValues: ['MNT','DEV','STG','PRO','MT1','MT2','ST1','ST2']
  EnvironmentNameLower2:
    Type: String
    Default: 'mt2'
    AllowedValues: ['mnt','dev','stg','pro','mt1','mt2','st1','st2']


Resources:
#--------------------Create VPC----------------------#
  #  ##  VPC  ##
  VPCNW01:
    Type: 'AWS::EC2::VPC'
    Properties: 
      CidrBlock: !FindInMap [VPC,NWadress,tokyo]
      InstanceTenancy: default
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
        - Key: Name
          Value: !Sub VPC-${SystemNameUpper}-${EnvironmentNameUpper}-01
  #  ##  VPC Flow Log  ##
  # LOGIAMPOLE:
  #   Type: 'AWS::IAM::ManagedPolicy'
  #   Properties:
  #     ManagedPolicyName: !Sub IAMP-${SystemNameUpper}-${EnvironmentNameUpper}-VPCFlowLogs
  #     PolicyDocument:
  #       Version: "2012-10-17"
  #       Statement:
  #         - Effect: Deny
  #           Action: '*'
  #           Resource: '*'
  # LOGIAMROLE:
  #   Type: AWS::IAM::Role
  #   Properties:
  #     AssumeRolePolicyDocument:
  #       Statement:
  #       - Effect: Allow
  #         Principal:
  #           Service: [vpc-flow-logs.amazonaws.com]
  #         Action: ['sts:AssumeRole']
  #     ManagedPolicyArns:
  #       - !Ref LOGIAMPOLE
  #     Path: /
  #     RoleName: !Sub IAMR-${SystemNameUpper}-${EnvironmentNameUpper}-VPCFlowLogs      
  # LOGVPCLOG01:
    # Type: AWS::EC2::FlowLog
    # Properties:
    #   DeliverLogsPermissionArn: !GetAtt LOGIAMROLE.Arn
    #   LogDestinationType: 'cloud-watch-logs'
    #   LogGroupName: !Sub VPCFlowLogs-${SystemNameUpper}-${EnvironmentNameUpper}
    #   ResourceId: !Ref VPCNW01
    #   ResourceType: 'VPC'
    #   TrafficType: ALL
  #  ##  DHCP  ##
  DOPT:
    Type: 'AWS::EC2::DHCPOptions'
    Properties:
      DomainName: ap-northeast-1.compute.internal
      DomainNameServers:
        - AmazonProvidedDNS
      NtpServers:
        - "169.254.169.123"
  DHCPASSOC1:
    Type: 'AWS::EC2::VPCDHCPOptionsAssociation'
    Properties:
      VpcId: !Ref VPCNW01
      DhcpOptionsId: !Ref DOPT

#--------------------Create Subnet----------------#
  #  ###  NGW  ###
  SUBNGW01:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: !FindInMap [Subnetcidr,NGW,01]
      AvailabilityZone: ap-northeast-1a
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SUB-${SystemNameUpper}-${EnvironmentNameUpper}-NGW01
  SUBNGW02:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: !FindInMap [Subnetcidr,NGW,02]
      AvailabilityZone: ap-northeast-1c
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SUB-${SystemNameUpper}-${EnvironmentNameUpper}-NGW02
  SUBNGW03:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: !FindInMap [Subnetcidr,NGW,03]
      AvailabilityZone: ap-northeast-1d
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SUB-${SystemNameUpper}-${EnvironmentNameUpper}-NGW03
  #  ###  Web Front  ###
  SUBWFR01:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: !FindInMap [Subnetcidr,WFR,01]
      AvailabilityZone: ap-northeast-1a
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SUB-${SystemNameUpper}-${EnvironmentNameUpper}-WFR01

  SUBWFR02:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: !FindInMap [Subnetcidr,WFR,02]
      AvailabilityZone: ap-northeast-1c
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SUB-${SystemNameUpper}-${EnvironmentNameUpper}-WFR02
          
  SUBWFR03:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: !FindInMap [Subnetcidr,WFR,03]
      AvailabilityZone: ap-northeast-1d
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SUB-${SystemNameUpper}-${EnvironmentNameUpper}-WFR03
  #  ###  AP Front  ###
  SUBAFR01:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: !FindInMap [Subnetcidr,AFR,01]
      AvailabilityZone: ap-northeast-1a
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SUB-${SystemNameUpper}-${EnvironmentNameUpper}-AFR01
  SUBAFR02:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: !FindInMap [Subnetcidr,AFR,02]
      AvailabilityZone: ap-northeast-1c
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SUB-${SystemNameUpper}-${EnvironmentNameUpper}-AFR02
  SUBAFR03:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: !FindInMap [Subnetcidr,AFR,03]
      AvailabilityZone: ap-northeast-1d
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SUB-${SystemNameUpper}-${EnvironmentNameUpper}-AFR03
  #  ###  Web/AP Server-container  ###
  SUBWEB01:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: !FindInMap [Subnetcidr,WEB,01]
      AvailabilityZone: ap-northeast-1a
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SUB-${SystemNameUpper}-${EnvironmentNameUpper}-WEB01
  SUBWEB02:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: !FindInMap [Subnetcidr,WEB,02]
      AvailabilityZone: ap-northeast-1c
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SUB-${SystemNameUpper}-${EnvironmentNameUpper}-WEB02
  SUBWEB03:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: !FindInMap [Subnetcidr,WEB,03]
      AvailabilityZone: ap-northeast-1d
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SUB-${SystemNameUpper}-${EnvironmentNameUpper}-WEB03
  #  ###  DB  ###
  SUBDB01:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: !FindInMap [Subnetcidr,DB,01]
      AvailabilityZone: ap-northeast-1a
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SUB-${SystemNameUpper}-${EnvironmentNameUpper}-RDS01
  SUBDB02:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: !FindInMap [Subnetcidr,DB,02]
      AvailabilityZone: ap-northeast-1c
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SUB-${SystemNameUpper}-${EnvironmentNameUpper}-RDS02
  SUBDB03:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: !FindInMap [Subnetcidr,DB,03]
      AvailabilityZone: ap-northeast-1d
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SUB-${SystemNameUpper}-${EnvironmentNameUpper}-RDS03
  #  ###  Batch  ###
  SUBBAT01:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: !FindInMap [Subnetcidr,BAT,01]
      AvailabilityZone: ap-northeast-1a
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SUB-${SystemNameUpper}-${EnvironmentNameUpper}-BAT01
  SUBBAT02:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: !FindInMap [Subnetcidr,BAT,02]
      AvailabilityZone: ap-northeast-1c
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SUB-${SystemNameUpper}-${EnvironmentNameUpper}-BAT02
  SUBBAT03:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: !FindInMap [Subnetcidr,BAT,03]
      AvailabilityZone: ap-northeast-1d
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SUB-${SystemNameUpper}-${EnvironmentNameUpper}-BAT03
  #  ###  Operation  ###
  SUBOPT01:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: !FindInMap [Subnetcidr,OPT,01]
      AvailabilityZone: ap-northeast-1a
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SUB-${SystemNameUpper}-${EnvironmentNameUpper}-OPT01
  SUBOPT02:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: !FindInMap [Subnetcidr,OPT,02]
      AvailabilityZone: ap-northeast-1c
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SUB-${SystemNameUpper}-${EnvironmentNameUpper}-OPT02
  SUBOPT03:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: !FindInMap [Subnetcidr,OPT,03]
      AvailabilityZone: ap-northeast-1d
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SUB-${SystemNameUpper}-${EnvironmentNameUpper}-OPT03
  #  ###  Endpoint  ###
  SUBENDP01:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: !FindInMap [Subnetcidr,ENDP,01]
      AvailabilityZone: ap-northeast-1a
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SUB-${SystemNameUpper}-${EnvironmentNameUpper}-ENDP01
  SUBENDP02:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: !FindInMap [Subnetcidr,ENDP,02]
      AvailabilityZone: ap-northeast-1c
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SUB-${SystemNameUpper}-${EnvironmentNameUpper}-ENDP02
  SUBENDP03:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: !FindInMap [Subnetcidr,ENDP,03]
      AvailabilityZone: ap-northeast-1d
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SUB-${SystemNameUpper}-${EnvironmentNameUpper}-ENDP03
  #  ###  ETL  ###
  SUBETL01:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: !FindInMap [Subnetcidr,ETL,01]
      AvailabilityZone: ap-northeast-1a
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SUB-${SystemNameUpper}-${EnvironmentNameUpper}-ENDP01
  SUBETL02:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: !FindInMap [Subnetcidr,ETL,02]
      AvailabilityZone: ap-northeast-1c
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SUB-${SystemNameUpper}-${EnvironmentNameUpper}-ENDP02
  SUBETL03:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: !FindInMap [Subnetcidr,ETL,03]
      AvailabilityZone: ap-northeast-1d
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SUB-${SystemNameUpper}-${EnvironmentNameUpper}-ENDP03

#---------------------Create GW NetworkAcl-------------------#

  #  ##  InternetGW  ##
  IGW:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: !Sub IGW-${SystemNameUpper}-${EnvironmentNameUpper}01
  #  ##  NAT GW  ##
  NATGW01:
    Type: AWS::EC2::NatGateway
    Properties: 
      AllocationId: !GetAtt EIPforNATGW01.AllocationId
      SubnetId: !Ref SUBNGW01
      Tags: 
        - Key: Name
          Value: !Sub NGW-${SystemNameUpper}-${EnvironmentNameUpper}01
  NATGW02:
    Type: AWS::EC2::NatGateway
    Properties: 
      AllocationId: !GetAtt EIPforNATGW02.AllocationId
      SubnetId: !Ref SUBNGW02
      Tags: 
        - Key: Name
          Value: !Sub NGW-${SystemNameUpper}-${EnvironmentNameUpper}02
  NATGW03:
    Type: AWS::EC2::NatGateway
    Properties: 
      AllocationId: !GetAtt EIPforNATGW03.AllocationId
      SubnetId: !Ref SUBNGW03
      Tags: 
        - Key: Name
          Value: !Sub NGW-${SystemNameUpper}-${EnvironmentNameUpper}03
  #  ##  EIP for NAT Gateway  ##
  EIPforNATGW01:
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: vpc
  EIPforNATGW02:
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: vpc
  EIPforNATGW03:
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: vpc
  #  ##  NACL  ##
  NWACL:
    Type: 'AWS::EC2::NetworkAcl'
    Properties:
      VpcId: !Ref VPCNW01
#--------------------Create RouteTable-----------------#

  RTBVPC01:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub RT-${SystemNameUpper}-${EnvironmentNameUpper}01
  #  ###  Body - NGW  ###
  RTBNGW01:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub RT-${SystemNameUpper}-${EnvironmentNameUpper}-NGW01
  RTBNGW02:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub RT-${SystemNameUpper}-${EnvironmentNameUpper}-NGW02
  RTBNGW03:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub RT-${SystemNameUpper}-${EnvironmentNameUpper}-NGW03
  #  ###  Body - Web Front  ###
  RTBWFR01:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub RT-${SystemNameUpper}-${EnvironmentNameUpper}-WFR01
  RTBWFR02:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub RT-${SystemNameUpper}-${EnvironmentNameUpper}-WFR02
  RTBWFR03:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub RT-${SystemNameUpper}-${EnvironmentNameUpper}-WFR03
  #  ###  Body - AP Front  ###
  RTBAFR01:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub RT-${SystemNameUpper}-${EnvironmentNameUpper}-AFR01
  RTBAFR02:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub RT-${SystemNameUpper}-${EnvironmentNameUpper}-AFR02
  RTBAFR03:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub RT-${SystemNameUpper}-${EnvironmentNameUpper}-AFR03
  #  ###  Body - Web/AP Server-Container  ###
  RTBWEB01:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub RT-${SystemNameUpper}-${EnvironmentNameUpper}-WEB01
  RTBWEB02:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub RT-${SystemNameUpper}-${EnvironmentNameUpper}-WEB02
  RTBWEB03:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub RT-${SystemNameUpper}-${EnvironmentNameUpper}-WEB03
  #  ###  Body - DB  ###
  RTBDB01:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub RT-${SystemNameUpper}-${EnvironmentNameUpper}-RDS01
  RTBDB02:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub RT-${SystemNameUpper}-${EnvironmentNameUpper}-RDS02
  RTBDB03:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub RT-${SystemNameUpper}-${EnvironmentNameUpper}-RDS03
  #  ###  Body - Batch  ###
  RTBBAT01:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub RT-${SystemNameUpper}-${EnvironmentNameUpper}-BAT01
  RTBBAT02:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub RT-${SystemNameUpper}-${EnvironmentNameUpper}-BAT02
  RTBBAT03:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub RT-${SystemNameUpper}-${EnvironmentNameUpper}-BAT03
  #  ###  Body - Operation  ###
  RTBOPT01:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub RT-${SystemNameUpper}-${EnvironmentNameUpper}-OPT01
  RTBOPT02:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub RT-${SystemNameUpper}-${EnvironmentNameUpper}-OPT02
  RTBOPT03:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub RT-${SystemNameUpper}-${EnvironmentNameUpper}-OPT03
  #  ###  Body - ENDP  ###
  RTBENDP01:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub RT-${SystemNameUpper}-${EnvironmentNameUpper}-ENDP01
  RTBENDP02:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub RT-${SystemNameUpper}-${EnvironmentNameUpper}-ENDP02
  RTBENDP03:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub RT-${SystemNameUpper}-${EnvironmentNameUpper}-ENDP03
  #  ###  Body - ETL  ###
  RTBETL01:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub RT-${SystemNameUpper}-${EnvironmentNameUpper}-ETL01
  RTBETL02:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub RT-${SystemNameUpper}-${EnvironmentNameUpper}-ETL02
  RTBETL03:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub RT-${SystemNameUpper}-${EnvironmentNameUpper}-ETL02

#--------------------VPC Route Attachment------------------------#

  VPCROUTE01:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPCNW01
      InternetGatewayId: !Ref IGW
  #  ### NGW subnet Route ###
  SUBNETROUTEforNGW01:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref RTBNGW01
      SubnetId: !Ref SUBNGW01
  SUBNETROUTEforNGW02:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref RTBNGW02
      SubnetId: !Ref SUBNGW02
  SUBNETROUTEforNGW03:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref RTBNGW03
      SubnetId: !Ref SUBNGW03
  #  ### Web Front subnet Route ###
  SUBNETROUTEforWFR01:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref RTBWFR01
      SubnetId: !Ref SUBWFR01
  SUBNETROUTEforWFR02:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref RTBWFR02
      SubnetId: !Ref SUBWFR02
  SUBNETROUTEforWFR03:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref RTBWFR03
      SubnetId: !Ref SUBWFR03
  #  ### AP Front subnet Route ###
  SUBNETROUTEforAFR01:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref RTBAFR01
      SubnetId: !Ref SUBAFR01
  SUBNETROUTEforAFR02:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref RTBAFR02
      SubnetId: !Ref SUBAFR02
  SUBNETROUTEforAFR03:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref RTBAFR03
      SubnetId: !Ref SUBAFR03
  #  ### Web/AP Server-Container subnet Route ###
  SUBNETROUTEforWEB01:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref RTBWEB01
      SubnetId: !Ref SUBWEB01
  SUBNETROUTEforWEB02:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref RTBWEB02
      SubnetId: !Ref SUBWEB02
  SUBNETROUTEforWEB03:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref RTBWEB03
      SubnetId: !Ref SUBWEB03
  #  ### DB subnet Route ###
  SUBNETROUTEforDB01:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref RTBDB01
      SubnetId: !Ref SUBDB01
  SUBNETROUTEforDB02:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref RTBDB02
      SubnetId: !Ref SUBDB02
  SUBNETROUTEforDB03:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref RTBDB03
      SubnetId: !Ref SUBDB03
  #  ### Batch subnet Route ###
  SUBNETROUTEforBAT01:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref RTBBAT01
      SubnetId: !Ref SUBBAT01
  SUBNETROUTEforBAT02:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref RTBBAT02
      SubnetId: !Ref SUBBAT02
  SUBNETROUTEforBAT03:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref RTBBAT03
      SubnetId: !Ref SUBBAT03
  #  ### Operation subnet Route ###
  SUBNETROUTEforOPT01:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref RTBOPT01
      SubnetId: !Ref SUBOPT01
  SUBNETROUTEforOPT02:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref RTBOPT02
      SubnetId: !Ref SUBOPT02
  SUBNETROUTEforOPT03:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref RTBOPT03
      SubnetId: !Ref SUBOPT03
  #  ### ENDP subnet Route ###
  SUBNETROUTEforENDP01:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref RTBENDP01
      SubnetId: !Ref SUBENDP01
  SUBNETROUTEforENDP02:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref RTBENDP02
      SubnetId: !Ref SUBENDP02
  SUBNETROUTEforENDP03:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref RTBENDP03
      SubnetId: !Ref SUBENDP03      
  #  ### ENDP subnet Route ###
  SUBNETROUTEforETL01:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref RTBETL01
      SubnetId: !Ref SUBETL01
  SUBNETROUTEforETL02:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref RTBETL02
      SubnetId: !Ref SUBETL02
  SUBNETROUTEforETL03:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref RTBETL03
      SubnetId: !Ref SUBETL03      
#------------------------SecurityGroup---------------------#
  #  ### ENDP-ECR-API01  ###
  SGforEndpEcrApi01:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub SG-ENDP-${SystemNameUpper}-${EnvironmentNameUpper}-ECRA01
      GroupName: !Sub SG-ENDP-${SystemNameUpper}-${EnvironmentNameUpper}-ECRA01
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SG-ENDP-${SystemNameUpper}-${EnvironmentNameUpper}-ECRA01       
  #  ### ENDP-ECR-DKR01  ###
  SGforEndpEcrDkr01:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub SG-ENDP-${SystemNameUpper}-${EnvironmentNameUpper}-ECRD01
      GroupName: !Sub SG-ENDP-${SystemNameUpper}-${EnvironmentNameUpper}-ECRD01
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SG-ENDP-${SystemNameUpper}-${EnvironmentNameUpper}-ECRD01     
  #  ### ENDP-ECR-LOGS01  ###
  SGforEndpLOGS01:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub SG-ENDP-${SystemNameUpper}-${EnvironmentNameUpper}-LOGS01
      GroupName: !Sub SG-ENDP-${SystemNameUpper}-${EnvironmentNameUpper}-LOGS01
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SG-ENDP-${SystemNameUpper}-${EnvironmentNameUpper}-LOGS01  
  #  ### ENDP-APIGW01 SecurityGroup ###
  SGforEndpAPIGW01:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub SG-ENDP-${SystemNameUpper}-${EnvironmentNameUpper}-APIGW01
      GroupName: !Sub SG-ENDP-${SystemNameUpper}-${EnvironmentNameUpper}-APIGW01
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SG-ENDP-${SystemNameUpper}-${EnvironmentNameUpper}-APIGW01
  #  ### ENDP-ECSAGT01 ###
  SGforEndpEcsAgent01:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub SG-ENDP-${SystemNameUpper}-${EnvironmentNameUpper}-ECSAGT01
      GroupName: !Sub SG-ENDP-${SystemNameUpper}-${EnvironmentNameUpper}-ECSAGT01
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SG-ENDP-${SystemNameUpper}-${EnvironmentNameUpper}-ECSAGT01
  #  ### ENDP-ECSTEY01  ###
  SGforEndpECSTEY01:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub SG-ENDP-${SystemNameUpper}-${EnvironmentNameUpper}-ECSTEY01
      GroupName: !Sub SG-ENDP-${SystemNameUpper}-${EnvironmentNameUpper}-ECSTEY01
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SG-ENDP-${SystemNameUpper}-${EnvironmentNameUpper}-ECSTEY01
  #  ### ENDP-ECS01  ###
  SGforEndpEcs01:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub SG-ENDP-${SystemNameUpper}-${EnvironmentNameUpper}-ECS01
      GroupName: !Sub SG-ENDP-${SystemNameUpper}-${EnvironmentNameUpper}-ECS01
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SG-ENDP-${SystemNameUpper}-${EnvironmentNameUpper}-ECS01
  #  ### ENDP-EC201  ###
  SGforEndpEC201:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub SG-ENDP-${SystemNameUpper}-${EnvironmentNameUpper}-EC201
      GroupName: !Sub SG-ENDP-${SystemNameUpper}-${EnvironmentNameUpper}-EC201
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SG-ENDP-${SystemNameUpper}-${EnvironmentNameUpper}-EC201
  #  ### ENDP-MONITOR01  ###
  SGforEndpMONITOR01:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub SG-ENDP-${SystemNameUpper}-${EnvironmentNameUpper}-MONITOR01
      GroupName: !Sub SG-ENDP-${SystemNameUpper}-${EnvironmentNameUpper}-MONITOR01
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SG-ENDP-${SystemNameUpper}-${EnvironmentNameUpper}-MONITOR01
  #  ### ENDP-KMS01  ###
  SGforEndpKMS01:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub SG-ENDP-${SystemNameUpper}-${EnvironmentNameUpper}-KMS01
      GroupName: !Sub SG-ENDP-${SystemNameUpper}-${EnvironmentNameUpper}-KMS01
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SG-ENDP-${SystemNameUpper}-${EnvironmentNameUpper}-KMS01
  #  ### ALB-WEB01  ###
  SGforAlbBWEB01:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub SG-ALB-${SystemNameUpper}-${EnvironmentNameUpper2}-WEB01
      GroupName: !Sub SG-ALB-${SystemNameUpper}-${EnvironmentNameUpper2}-WEB01
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SG-ALB-${SystemNameUpper}-${EnvironmentNameUpper2}-WEB01
  #  ### ECS-BAT01  ###
  SGforECSBAT01:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub SG-ECS-${SystemNameUpper}-${EnvironmentNameUpper2}-BAT01
      GroupName: !Sub SG-ECS-${SystemNameUpper}-${EnvironmentNameUpper2}-BAT01
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SG-ECS-${SystemNameUpper}-${EnvironmentNameUpper2}-BAT01
  #  ### ECS-WEB01  ###
  SGforECSWEB01:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub SG-ECS-${SystemNameUpper}-${EnvironmentNameUpper2}-WEB01
      GroupName: !Sub SG-ECS-${SystemNameUpper}-${EnvironmentNameUpper2}-WEB01
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SG-ECS-${SystemNameUpper}-${EnvironmentNameUpper2}-WEB01
  #  ### ECS-WEB02  ###
  SGforECSWEB02:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub SG-ECS-${SystemNameUpper}-${EnvironmentNameUpper2}-WEB02
      GroupName: !Sub SG-ECS-${SystemNameUpper}-${EnvironmentNameUpper2}-WEB02
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SG-ECS-${SystemNameUpper}-${EnvironmentNameUpper2}-WEB02
  #  ### RDS-IRD01  ###
  SGforRDSIRD01:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub SG-RDS-${SystemNameUpper}-${EnvironmentNameUpper2}-IRD01
      GroupName: !Sub SG-RDS-${SystemNameUpper}-${EnvironmentNameUpper2}-IRD01
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SG-RDS-${SystemNameUpper}-${EnvironmentNameUpper2}-IRD01
  #  ### RDS-IRD011  ###
  SGforRDSIRD11:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub SG-RDS-${SystemNameUpper}-${EnvironmentNameUpper2}-IRD011
      GroupName: !Sub SG-RDS-${SystemNameUpper}-${EnvironmentNameUpper2}-IRD011
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SG-RDS-${SystemNameUpper}-${EnvironmentNameUpper2}-IRD011
  #  ### CB-BUILD01  ###
  SGforEndpBUILD01:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub SG-CB-${SystemNameUpper}-${EnvironmentNameUpper2}-BUILD01
      GroupName: !Sub SG-CB-${SystemNameUpper}-${EnvironmentNameUpper2}-BUILD01
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SG-CB-${SystemNameUpper}-${EnvironmentNameUpper2}-BUILD01
  #  ### CB-BUILD02  ###
  SGforEndpBUILD02:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub SG-CB-${SystemNameUpper}-${EnvironmentNameUpper2}-BUILD02
      GroupName: !Sub SG-CB-${SystemNameUpper}-${EnvironmentNameUpper2}-BUILD02
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SG-CB-${SystemNameUpper}-${EnvironmentNameUpper2}-BUILD02          
  #  ### LMD HealthCheck01-APContainer01 ###
  SGforLmdHealthCheck01APContainer01:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub SG-LMD-${SystemNameUpper}-${EnvironmentNameUpper2}-HealthCheck01-APContainer01
      GroupName: !Sub SG-LMD-${SystemNameUpper}-${EnvironmentNameUpper2}-HealthCheck01-APContainer01
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SG-LMD-${SystemNameUpper}-${EnvironmentNameUpper2}-HealthCheck01-APContainer01
  #  ### LMD CWLtoZabbix ###
  SGforLmdCWLtoZabbix:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub SG-LMD-${SystemNameUpper}-${EnvironmentNameUpper2}-CWLtoZabbix
      GroupName: !Sub SG-LMD-${SystemNameUpper}-${EnvironmentNameUpper2}-CWLtoZabbix
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SG-LMD-${SystemNameUpper}-${EnvironmentNameUpper2}-CWLtoZabbix
  #  ### LMD KOKUHO-HTTPRES01 ###
  SGforKOKUHOHTTPRES01:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub SG-LMD-${SystemNameUpper}-${EnvironmentNameUpper2}-KOKUHO-HTTPRES01
      GroupName: !Sub SG-LMD-${SystemNameUpper}-${EnvironmentNameUpper2}-KOKUHO-HTTPRES01
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SG-LMD-${SystemNameUpper}-${EnvironmentNameUpper2}-KOKUHO-HTTPRES01
  #  ### LMD S3ObjectDelete ###
  SGforS3ObjectDelete:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub SG-LMD-${SystemNameUpper}-${EnvironmentNameUpper2}-S3ObjectDelete
      GroupName: !Sub SG-LMD-${SystemNameUpper}-${EnvironmentNameUpper2}-S3ObjectDelete
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SG-LMD-${SystemNameUpper}-${EnvironmentNameUpper2}-S3ObjectDelete
  #  ### BAT BACKUP01 ###
  SGforBACKUP01:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub SG-BAT-${SystemNameUpper}-${EnvironmentNameUpper2}-BACKUP01
      GroupName: !Sub SG-BAT-${SystemNameUpper}-${EnvironmentNameUpper2}-BACKUP01
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SG-BAT-${SystemNameUpper}-${EnvironmentNameUpper2}-BACKUP01
  #   ## BAT IRD-BACKUP01 ###
  SGforIRDBACKUP01:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub SG-BAT-${SystemNameUpper}-${EnvironmentNameUpper2}-IRD-BACKUP01
      GroupName: !Sub SG-BAT-${SystemNameUpper}-${EnvironmentNameUpper2}-IRD-BACKUP01
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SG-BAT-${SystemNameUpper}-${EnvironmentNameUpper2}-IRD-BACKUP01
  #  ### AWS BAT01  ###
  SGforAWSBAT01:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub SG-BAT-${SystemNameUpper}-${EnvironmentNameUpper2}-BAT01
      GroupName: !Sub SG-BAT-${SystemNameUpper}-${EnvironmentNameUpper2}-BAT01
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SG-BAT-${SystemNameUpper}-${EnvironmentNameUpper2}-BAT01
  #  ### AWS BAT02  ###
  SGforAWSBAT02:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub SG-BAT-${SystemNameUpper}-${EnvironmentNameUpper2}-BAT02
      GroupName: !Sub SG-BAT-${SystemNameUpper}-${EnvironmentNameUpper2}-BAT02
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SG-BAT-${SystemNameUpper}-${EnvironmentNameUpper2}-BAT02
  #  ### AWS BAT03  ###
  SGforAWSBAT03:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub SG-BAT-${SystemNameUpper}-${EnvironmentNameUpper2}-BAT03
      GroupName: !Sub SG-BAT-${SystemNameUpper}-${EnvironmentNameUpper2}-BAT03
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SG-BAT-${SystemNameUpper}-${EnvironmentNameUpper2}-BAT03
  #  ### ETL GLUE01  ###
  SGforETLGLUE01:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub SG-ETL-${SystemNameUpper}-${EnvironmentNameUpper2}-GLUE01
      GroupName: !Sub SG-ETL-${SystemNameUpper}-${EnvironmentNameUpper2}-GLUE01
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SG-ETL-${SystemNameUpper}-${EnvironmentNameUpper2}-GLUE01
  #  ### EFS COMMON01  ###
  SGforEFS:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub SG-EFS-${SystemNameUpper}-${EnvironmentNameUpper2}-COMMON01
      GroupName: !Sub SG-EFS-${SystemNameUpper}-${EnvironmentNameUpper2}-COMMON01
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SG-EFS-${SystemNameUpper}-${EnvironmentNameUpper2}-COMMON01
  #  ### EFS BKS01  ###
  SGforBKS01:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub SG-EC2-${SystemNameUpper}-${EnvironmentNameUpper2}-BKS01
      GroupName: !Sub SG-EC2-${SystemNameUpper}-${EnvironmentNameUpper2}-BKS01
      VpcId: !Ref VPCNW01
      Tags:
        - Key: Name
          Value: !Sub SG-EC2-${SystemNameUpper}-${EnvironmentNameUpper2}-BKS01
#-------------------------Create VPCEndpoint---------------------#

  #  ### ecr.api VPCENDPOINT ###
  ecrapiVPCENDPOINT:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      VpcEndpointType: Interface
      ServiceName: 'com.amazonaws.ap-northeast-1.ecr.api'
      VpcId: !Ref VPCNW01
      SubnetIds: 
      - !Ref SUBENDP01
      - !Ref SUBENDP02
      - !Ref SUBENDP03
      SecurityGroupIds: 
      - !Ref SGforEndpEcrApi01
  #  ### ecr.dkr VPCENDPOINT ###
  ecrdkrVPCENDPOINT:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      VpcEndpointType: Interface
      ServiceName: 'com.amazonaws.ap-northeast-1.ecr.dkr'
      VpcId: !Ref VPCNW01
      SubnetIds: 
      - !Ref SUBENDP01
      - !Ref SUBENDP02
      - !Ref SUBENDP03
      SecurityGroupIds: 
      - !Ref SGforEndpEcrDkr01
  #  ### logs VPCENDPOINT ###
  logsVPCENDPOINT:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      VpcEndpointType: Interface
      ServiceName: 'com.amazonaws.ap-northeast-1.logs'
      VpcId: !Ref VPCNW01
      SubnetIds: 
      - !Ref SUBENDP01
      - !Ref SUBENDP02
      - !Ref SUBENDP03
      SecurityGroupIds: 
      - !Ref SGforEndpLOGS01
  #  ### execute-api VPCENDPOINT ###
  executeapiVPCENDPOINT:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      VpcEndpointType: Interface
      ServiceName: 'com.amazonaws.ap-northeast-1.execute-api'
      VpcId: !Ref VPCNW01
      SubnetIds: 
      - !Ref SUBENDP01
      - !Ref SUBENDP02
      - !Ref SUBENDP03
      SecurityGroupIds: 
      - !Ref SGforEndpAPIGW01
  #  ### ecs-agent VPCENDPOINT ###
  ecsagentVPCENDPOINT:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      VpcEndpointType: Interface
      ServiceName: 'com.amazonaws.ap-northeast-1.ecs-telemetry'
      VpcId: !Ref VPCNW01
      SubnetIds: 
      - !Ref SUBENDP01
      - !Ref SUBENDP02
      - !Ref SUBENDP03
      SecurityGroupIds: 
      - !Ref SGforEndpECSTEY01
  #  ### ecs VPCENDPOINT ###
  ecsVPCENDPOINT:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      VpcEndpointType: Interface
      ServiceName: 'com.amazonaws.ap-northeast-1.ecs'
      VpcId: !Ref VPCNW01
      SubnetIds: 
      - !Ref SUBENDP01
      - !Ref SUBENDP02
      - !Ref SUBENDP03
      SecurityGroupIds: 
      - !Ref SGforEndpEcs01
  #  ### ec2 VPCENDPOINT ###
  ec2VPCENDPOINT:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      VpcEndpointType: Interface
      ServiceName: 'com.amazonaws.ap-northeast-1.ec2'
      VpcId: !Ref VPCNW01
      SubnetIds: 
      - !Ref SUBENDP01
      - !Ref SUBENDP02
      - !Ref SUBENDP03
      SecurityGroupIds: 
      - !Ref SGforEndpEC201
  #  ### monitoring VPCENDPOINT ###
  monitoringVPCENDPOINT:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      VpcEndpointType: Interface
      ServiceName: 'com.amazonaws.ap-northeast-1.monitoring'
      VpcId: !Ref VPCNW01
      SubnetIds: 
      - !Ref SUBENDP01
      - !Ref SUBENDP02
      - !Ref SUBENDP03
      SecurityGroupIds: 
      - !Ref SGforEndpMONITOR01
  #  ### ecsagent VPCENDPOINT ###
  ecsagentVPCENDPOINT:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      VpcEndpointType: Interface
      ServiceName: 'com.amazonaws.ap-northeast-1.ecs-agent'
      VpcId: !Ref VPCNW01
      SubnetIds: 
      - !Ref SUBENDP01
      - !Ref SUBENDP02
      - !Ref SUBENDP03
      SecurityGroupIds: 
      - !Ref SGforEndpEcsAgent01
  #  ### ecsagent VPCENDPOINT ###
  kmsVPCENDPOINT:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      VpcEndpointType: Interface
      ServiceName: 'com.amazonaws.ap-northeast-1.kms'
      VpcId: !Ref VPCNW01
      SubnetIds: 
      - !Ref SUBENDP01
      - !Ref SUBENDP02
      - !Ref SUBENDP03
      SecurityGroupIds: 
      - !Ref SGforEndpKMS01
  #  ### S3 GatewayEndpoint ###
  S3GatewayEndpoint:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      ServiceName: 'com.amazonaws.ap-northeast-1.s3'
      VpcId: !Ref VPCNW01
      RouteTableIds:
       - !Ref RTBETL01
       - !Ref RTBETL02
       - !Ref RTBETL03
       - !Ref RTBBAT01
       - !Ref RTBBAT02
       - !Ref RTBBAT03
       - !Ref RTBWEB01
       - !Ref RTBWEB02
       - !Ref RTBWEB03
       - !Ref RTBOPT01
       - !Ref RTBOPT02
       - !Ref RTBOPT03
  #  ### DynamoDB GatewayEndpoint ###
  DynamoDBGatewayEndpoint:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      ServiceName: 'com.amazonaws.ap-northeast-1.dynamodb'
      VpcId: !Ref VPCNW01
      RouteTableIds:
       - !Ref RTBBAT01
       - !Ref RTBBAT02
       - !Ref RTBBAT03
       - !Ref RTBWEB01
       - !Ref RTBWEB02
       - !Ref RTBWEB03
       - !Ref RTBETL01
       - !Ref RTBETL02
       - !Ref RTBETL03

#------------------Create ELB--------------------#

  #  ### NLB 001 ###
  NLB001:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      Name: !Sub NLB-${SystemNameUpper}-${EnvironmentNameUpper2}-001
      Scheme: internal
      Type: network
      Subnets:
        - !Ref SUBAFR01
        - !Ref SUBAFR02
        - !Ref SUBAFR03
      IpAddressType: ipv4
      LoadBalancerAttributes: 
       - Key: 'access_logs.s3.enabled'
         Value: true
       - Key: access_logs.s3.bucket
         Value: !Sub s3-${SystemNameLower}-${EnvironmentNameLower2}-nlb-log
       - Key: access_logs.s3.prefix
         Value: !Sub NLB-${SystemNameUpper}-${EnvironmentNameUpper2}-001
       - Key: deletion_protection.enabled
         Value: true
       - Key: load_balancing.cross_zone.enabled
         Value: true
  #  ### ALB WEB01 ###
  ALBWEB01:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub ALB-${SystemNameUpper}-${EnvironmentNameUpper2}-WEB01
      Scheme: internal
      Type: application
      Subnets:
       - !Ref SUBAFR01
       - !Ref SUBAFR02
       - !Ref SUBAFR03
      SecurityGroups:
       - !Ref SGforAlbBWEB01
      IpAddressType: ipv4
      LoadBalancerAttributes:
       - Key: access_logs.s3.enabled
         Value: false
       - Key: access_logs.s3.bucket
         Value: !Sub s3-${SystemNameLower}-${EnvironmentNameLower2}-alb-log
       - Key: access_logs.s3.prefix
         Value: !Sub ALB-${SystemNameUpper}-${EnvironmentNameUpper2}-WEB01
       - Key: idle_timeout.timeout_seconds
         Value: 60
       - Key: deletion_protection.enabled
         Value: true
       - Key: routing.http2.enabled
         Value: true
       - Key: routing.http.drop_invalid_header_fields.enabled
         Value: false
       - Key: routing.http.xff_client_port.enabled
         Value: false
       - Key: routing.http.preserve_host_header.enabled
         Value: false
       - Key: routing.http.xff_header_processing.mode
         Value: append
       - Key: load_balancing.cross_zone.enabled
         Value: true
       - Key: routing.http.desync_mitigation_mode
         Value: defensive
       - Key: waf.fail_open.enabled
         Value: false
       - Key: routing.http.x_amzn_tls_version_and_cipher_suite.enabled
         Value: false
  # #  ### ALB WSPRXY01 ###
  # ALBWSPRXY01:
  #   Type: AWS::ElasticLoadBalancingV2::LoadBalancer
  #   Properties:
  #     Name: !Sub ALB-${SystemNameUpper}-${EnvironmentNameUpper2}-WSPRXY01
  #     Scheme: internal
  #     Type: application
  #     Subnets:
  #      - !Ref SUBWFR01
  #      - !Ref SUBWFR02
  #      - !Ref SUBWFR03
  #     SecurityGroups:
  #      - !Ref SGforAlbWSPRXY01
  #     IpAddressType: ipv4
  #     LoadBalancerAttributes:
  #      - Key: access_logs.s3.enabled
  #        Value: false
  #     #  - Key: access_logs.s3.bucket
  #     #    Value: !Sub s3-${SystemNameLower}-${EnvironmentNameLower}-elb-log
  #     #  - Key: access_logs.s3.prefix
  #     #    Value: !Sub ALB-${SystemNameUpper}-${EnvironmentNameUpper2}-WSPRXY01
  #      - Key: idle_timeout.timeout_seconds
  #        Value: 62
  #      - Key: deletion_protection.enabled
  #        Value: true
  #      - Key: routing.http2.enabled
  #        Value: true
  #      - Key: routing.http.drop_invalid_header_fields.enabled
  #        Value: false
  #      - Key: routing.http.xff_client_port.enabled
  #        Value: false
  #      - Key: routing.http.preserve_host_header.enabled
  #        Value: false
  #      - Key: routing.http.xff_header_processing.mode
  #        Value: append
  #      - Key: load_balancing.cross_zone.enabled
  #        Value: true
  #      - Key: routing.http.desync_mitigation_mode
  #        Value: defensive
  #      - Key: waf.fail_open.enabled
  #        Value: false
  #      - Key: routing.http.x_amzn_tls_version_and_cipher_suite.enabled
  #        Value: false