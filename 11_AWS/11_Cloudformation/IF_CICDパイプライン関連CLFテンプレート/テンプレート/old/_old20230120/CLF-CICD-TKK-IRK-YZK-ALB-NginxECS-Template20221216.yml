#############################################################
# Copyright 2019 FUJITSU LIMITED
# FileName: CLF-CICD-YZK-ALB-NginxECS-Template.yml
# FileType: YAML
# OverViews: CloudFormation Template for NginxECS CI/CD
# Version: 1.0
# Author: Fujitsu - hou
#############################################################
AWSTemplateFormatVersion: "2010-09-09"
Transform:
  Name: 'AWS::Include'
  Parameters:
    Location: !Sub 's3://${BucketName02}/output_Mappings_TKK-IRK-YZK_ALB_NginxECS.yml'


# Mappings:
#   SystemEnvironmentMapping:
#     TKKDEV:
#       SystemNameUpper: TKK
#       EnvironmentNameUpper: DEV
#       SystemNameLower: tkk
#       EnvironmentNameLower: dev
#       VpcId: vpc-04d90ddcfd80744dd
#       Subnet: 
#         - "subnet-012fc525849c0a12f"
#         - "subnet-0de931d824c2b0f17"
#       LogGroupRetentionInDays: 30
#       KmsKeyId: '61fc2ee6-5b95-4c95-a08c-f4ef1ffc96ed'
#       NamespaceId: ns-ry7ad7yslgpndsyx
#       VpcEndpointId01: "-"
#       VpcEndpointId02: "-" 
#       ALBWSPRXY01Arn: 'arn:aws:elasticloadbalancing:ap-northeast-1:012752345683:loadbalancer/app/ALB-TKK-DEV-WEB01/1d1ee20491e19fb2'

#     TKKSTG:
#       SystemNameUpper: TKK
#       EnvironmentNameUpper: STG
#       SystemNameLower: tkk
#       EnvironmentNameLower: stg
#       VpcId: vpc-02438362be49444f0
#       Subnet: 
#         - "subnet-047c898e058b6a16c"
#         - "subnet-02e2efdac98663495"
#       LogGroupRetentionInDays: 1825
#       KmsKeyId: '61fc2ee6-5b95-4c95-a08c-f4ef1ffc96ed'
#       NamespaceId: ns-ry7ad7yslgpndsyx
#       VpcEndpointId01: "vpce-05f7a4e3335617de7"
#       VpcEndpointId02: "vpce-034912d6126d1183e"      
#       ALBWSPRXY01Arn: '-'

#     TKKMNT:
#       SystemNameUpper: TKK
#       EnvironmentNameUpper: MNT
#       SystemNameLower: tkk
#       EnvironmentNameLower: mnt
#       VpcId: vpc-0bd4e7e14f22dabb6
#       Subnet: 
#         - "subnet-00f6c8dfa96416b5f"
#         - "subnet-0733f39d7dc72ca89"
#       LogGroupRetentionInDays: 30
#       KmsKeyId: 'ca061e31-5d40-4ed7-9699-3fe67059dfec'
#       NamespaceId: ns-awmnw55r3rvnuyjz
#       VpcEndpointId01: "vpce-095cd5cbb6a31bb01"
#       VpcEndpointId02: "vpce-01e7e67bb22865299"
#       ALBWSPRXY01Arn: '-'

#     YZKDEV:
#       SystemNameUpper: YZK
#       EnvironmentNameUpper: DEV
#       SystemNameLower: yzk
#       EnvironmentNameLower: dev
#       VpcId: vpc-04d90ddcfd80744dd
#       Subnet: 
#         - "subnet-012fc525849c0a12f"
#         - "subnet-0de931d824c2b0f17"
#       LogGroupRetentionInDays: 30
#       KmsKeyId: '61fc2ee6-5b95-4c95-a08c-f4ef1ffc96ed'
#       NamespaceId: ns-ry7ad7yslgpndsyx
#       VpcEndpointId01: "-"
#       VpcEndpointId02: "-" 
#       ALBWSPRXY01Arn: '-'

#     YZKSTG:
#       SystemNameUpper: YZK
#       EnvironmentNameUpper: STG
#       SystemNameLower: yzk
#       EnvironmentNameLower: stg
#       VpcId: vpc-01e2d26b07f654cd6
#       Subnet: 
#         - "subnet-078222f9bd33ff0c8"
#         - "subnet-0814b2d7c7a1da156"
#       LogGroupRetentionInDays: 1825
#       KmsKeyId: '5665c543-1665-482b-a9b8-d1256dcf68fe'
#       NamespaceId: ns-wak2porfvv6uxg45
#       VpcEndpointId01: "vpce-0a6e3021691529620"
#       VpcEndpointId02: "vpce-037372e8509fae6a6" 
#       ALBWSPRXY01Arn: '-'

#     YZKMNT:
#       SystemNameUpper: YZK
#       EnvironmentNameUpper: MNT
#       SystemNameLower: yzk
#       EnvironmentNameLower: mnt
#       VpcId: vpc-0bd4e7e14f22dabb6
#       Subnet: 
#         - "subnet-00f6c8dfa96416b5f"
#         - "subnet-0733f39d7dc72ca89"
#       LogGroupRetentionInDays: 30
#       KmsKeyId: 'ca061e31-5d40-4ed7-9699-3fe67059dfec'
#       NamespaceId: ns-awmnw55r3rvnuyjz    
#       VpcEndpointId01: "vpce-095cd5cbb6a31bb01"
#       VpcEndpointId02: "vpce-01e7e67bb22865299"      
#       ALBWSPRXY01Arn: '-'

#     IRKDEV:
#       SystemNameUpper: IRK
#       EnvironmentNameUpper: DEV
#       SystemNameLower: irk
#       EnvironmentNameLower: dev
#       VpcId: vpc-04d90ddcfd80744dd
#       Subnet: 
#         - "subnet-012fc525849c0a12f"
#         - "subnet-0de931d824c2b0f17"
#       LogGroupRetentionInDays: 30
#       KmsKeyId: '61fc2ee6-5b95-4c95-a08c-f4ef1ffc96ed'
#       NamespaceId: ns-ry7ad7yslgpndsyx
#       VpcEndpointId01: "-"
#       VpcEndpointId02: "-"     
#       ALBWSPRXY01Arn: '-'

#     IRKSTG:
#       SystemNameUpper: IRK
#       EnvironmentNameUpper: STG
#       SystemNameLower: irk
#       EnvironmentNameLower: stg
#       VpcId: vpc-0af6cedd1d668b053
#       Subnet: 
#         - "subnet-0f7384437964e5634"
#         - "subnet-08bc3f510266bcbe8"
#       LogGroupRetentionInDays: 1825
#       KmsKeyId: 'ca061e31-5d40-4ed7-9699-3fe67059dfec'
#       NamespaceId: ns-awmnw55r3rvnuyjz
#       VpcEndpointId01: "vpce-05aa856e0980051c3"
#       VpcEndpointId02: "vpce-024ed93126676e45d" 
#       ALBWSPRXY01Arn: '-'

#     IRKMNT:
#       SystemNameUpper: IRK
#       EnvironmentNameUpper: MNT
#       SystemNameLower: irk
#       EnvironmentNameLower: mnt
#       VpcId: vpc-0bd4e7e14f22dabb6
#       Subnet: 
#         - "subnet-00f6c8dfa96416b5f"
#         - "subnet-0733f39d7dc72ca89"
#       LogGroupRetentionInDays: 30
#       KmsKeyId: 'ca061e31-5d40-4ed7-9699-3fe67059dfec'
#       NamespaceId: ns-awmnw55r3rvnuyjz
#       VpcEndpointId01: "vpce-095cd5cbb6a31bb01"
#       VpcEndpointId02: "vpce-01e7e67bb22865299"  
#       ALBWSPRXY01Arn: '-'
      


Parameters:
  #  ## user form  ##
  #  :param ProjectNumber: [Example:'01']
  #  :param ProjectNameUpper : [NGINX]
  #  :param ProjectNameUpper : [nginx]  
  #  :param Port: [Example:'443']
  #  :param SystemEnvironmentName: ['TKKDEV','TKKMNT','TKKSTG','IRKDEV','IRKMNT','IRKSTG','YZKDEV','YZKMNT','YZKSTG']
  #  :param ExecutionRoleName: ['IAMR-TKK-DEV-WEBTaskAction01','IAMR-TKK-STG-WEBTaskAction','IAMR-IRK-MNT-WEBTaskAction','IAMR-IRK-MNT-WEBTaskAction02','IAMR-IRK-STG-WEBTaskAction','IAMR-YZK-STG-WEBTaskAction','IAMR-YZK-STG-WEBTaskAction02']
  #  :param TaskRoleName:  ['IAMR-TKK-DEV-WEBContainerAction01','IAMR-TKK-STG-APContainerAction','IAMR-IRK-MNT-APContainerAction','IAMR-YZK-MNT-APContainerAction','IAMR-YZK-MNT-APContainerAction02','IAMR-IRK-STG-APContainerAction','IAMR-YZK-STG-APContainerAction','IAMR-YZK-STG-APContainerAction02']
  #  :param ClusterNumber: ['01','02']
  #  :param DesiredCount: EcsService Desired 
  #  :param MaxCapacity: ScalableTarget MAX   
  #  :param MinCapacity: ScalableTarget Min   
  #  :param TargetValue: ScalingPolicy 70
  #  :param BucketName01: ['tkk-build-source-bucket-dev1','irk-build-source-bucket-mnt','tkk-build-source-bucket-stg','build-source-bucket-dev','build-source-bucket-mnt','build-source-bucket-stg']
  #  :param BuildServiceRoleName: ['IAMR-TKK-DEV-WEBCodeBuild01','IAMR-TKK-STG-WEBCodeBuild','IAMR-IRK-MNT-WEBCodeBuild','IAMR-IRK-MNT-WEBCodeBuild02','IAMR-IRK-STG-WEBCodeBuild','IAMR-YZK-STG-WEBCodeBuild','IAMR-YZK-STG-WEBCodeBuild02']
  #  :param CodeBuildSecurityGroupId: ['sg-0d3c60bf08f23206d','sg-0e842b94094c8d0d7','sg-053189344799184b4','sg-0e1ac9d9d234066ed','sg-012bdcdf9f2279f2d','sg-061e256a9d483e944']
  #  :param DeployServiceRoleName: ['-','IAMR-TKK-DEV-WEBCodeDeploy01','IAMR-TKK-STG-WEBCodeDeploy','IAMR-IRK-MNT-WEBCodeDeploy','IAMR-IRK-MNT-WEBCodeDeploy02','IAMR-IRK-STG-WEBCodeDeploy','IAMR-YZK-STG-WEBCodeDeploy','IAMR-YZK-STG-WEBCodeDeploy02']
  #  :param PipelineServiceRoleName:  ['IAMR-TKK-DEV-WEBCodePipeline01','IAMR-TKK-STG-WEBCodePipeline','IAMR-IRK-MNT-WEBCodePipeline','IAMR-IRK-MNT-WEBCodePipeline02','IAMR-IRK-STG-WEBCodePipeline','IAMR-YZK-STG-WEBCodePipeline','IAMR-YZK-STG-WEBCodePipeline02']
  #  :param BucketName02: ['s3-tkk-dev-cfn01','s3-irk-mnt-cfn01','s3-tkk-stg-cfn01']
  #  :WebInstanceRoleName: ['IAMR-TKK-DEV-WEB','IAMR-TKK-STG-WEB','IAMR-IRK-MNT-WEB','IAMR-IRK-MNT-WEB02','IAMR-IRK-STG-WEB',IAMR-YZK-DEV-WEB','IAMR-YZK-STG-WEB','IAMR-YZK-STG-WEB02']
  #  :CertificateArn:  ['-']
  ProjectNumber:
    Type: Number
    Description: 'Example:01'
  # ProjectNameUpper:
  #   Type: String
  #   Description: 'NGINX'    
  ProjectNameLower:
    Type: String
    Description: 'nginx'
  Port: 
    Type: Number
    Description: 443
  SystemEnvironmentName: 
    Type: String
    Default: 'TKKDEV'
    AllowedValues: ['TKKDEV','TKKMNT','TKKSTG','IRKDEV','IRKMNT','IRKSTG','YZKDEV','YZKMNT','YZKSTG']
  ExecutionRoleName: 
    Type: String
    Default: 'IAMR-TKK-DEV-WEBTaskAction01'
    AllowedValues: ['IAMR-TKK-DEV-WEBTaskAction01','IAMR-TKK-STG-WEBTaskAction','IAMR-IRK-MNT-WEBTaskAction','IAMR-IRK-MNT-WEBTaskAction02','IAMR-IRK-STG-WEBTaskAction','IAMR-YZK-STG-WEBTaskAction','IAMR-YZK-STG-WEBTaskAction02']
  TaskRoleName: 
    Type: String
    Default: 'IAMR-TKK-DEV-WEBContainerAction01'
    AllowedValues: ['IAMR-TKK-DEV-WEBContainerAction01','IAMR-TKK-STG-APContainerAction','IAMR-IRK-MNT-APContainerAction','IAMR-YZK-MNT-APContainerAction','IAMR-YZK-MNT-APContainerAction02','IAMR-IRK-STG-APContainerAction','IAMR-YZK-STG-APContainerAction','IAMR-YZK-STG-APContainerAction02']
  ClusterNumber:
    Type: Number 
    Default: '01'
    AllowedValues: ['01','02']
  DesiredCount:
    Type: Number
    Default: 0
  MaxCapacity:
    Type: Number
    Default: 0
  MinCapacity:
    Type: Number
    Default: 0
  TargetValue:
    Type: Number
    Default: 70
  BucketName01: 
    Type: String
    Default: "tkk-build-source-bucket-dev1"
    AllowedValues: ['tkk-build-source-bucket-dev1','irk-build-source-bucket-mnt','tkk-build-source-bucket-stg']
  BuildServiceRoleName: 
    Type: String
    Default: 'IAMR-TKK-DEV-WEBCodeBuild01'
    AllowedValues: ['IAMR-TKK-DEV-WEBCodeBuild01','IAMR-TKK-STG-WEBCodeBuild','IAMR-IRK-MNT-WEBCodeBuild','IAMR-IRK-MNT-WEBCodeBuild02','IAMR-IRK-STG-WEBCodeBuild','IAMR-YZK-STG-WEBCodeBuild','IAMR-YZK-STG-WEBCodeBuild02']
  CodeBuildSecurityGroupId:
    Type: String
    Default: "sg-0d3c60bf08f23206d"
    AllowedValues: ['sg-0d3c60bf08f23206d','sg-0e842b94094c8d0d7','sg-053189344799184b4','sg-0e1ac9d9d234066ed','sg-012bdcdf9f2279f2d','sg-061e256a9d483e944']
  DeployServiceRoleName: 
    Type: String
    Default: 'IAMR-TKK-DEV-WEBCodeDeploy01'
    AllowedValues: ['-','IAMR-TKK-DEV-WEBCodeDeploy01','IAMR-TKK-STG-WEBCodeDeploy','IAMR-IRK-MNT-WEBCodeDeploy','IAMR-IRK-MNT-WEBCodeDeploy02','IAMR-IRK-STG-WEBCodeDeploy','IAMR-YZK-STG-WEBCodeDeploy','IAMR-YZK-STG-WEBCodeDeploy02']
  PipelineServiceRoleName: 
    Type: String
    Default: 'IAMR-TKK-DEV-WEBCodePipeline01'
    AllowedValues: ['IAMR-TKK-DEV-WEBCodePipeline01','IAMR-TKK-STG-WEBCodePipeline','IAMR-IRK-MNT-WEBCodePipeline','IAMR-IRK-MNT-WEBCodePipeline02','IAMR-IRK-STG-WEBCodePipeline','IAMR-YZK-STG-WEBCodePipeline','IAMR-YZK-STG-WEBCodePipeline02']
  BucketName02: 
    Type: String
    Default: 's3-tkk-dev-cfn01'
    AllowedValues: ['s3-tkk-dev-cfn01','s3-irk-mnt-cfn01','s3-tkk-stg-cfn01']
  WebInstanceRoleName: 
    Type: String
    Default: 'IAMR-IRK-MNT-WEB'
    AllowedValues:  ['IAMR-TKK-DEV-WEB','IAMR-TKK-STG-WEB','IAMR-IRK-MNT-WEB','IAMR-IRK-MNT-WEB02','IAMR-IRK-STG-WEB','IAMR-YZK-DEV-WEB','IAMR-YZK-STG-WEB','IAMR-YZK-STG-WEB02']
  ALBName: 
    Type: String
    Default: 'ALB-TKK-DEV-WEB01'
    AllowedValues: ['ALB-TKK-DEV-WEB01','ALB-YZK-MNT-WEB01']
  CertificateArn: 
    Type: String
    Default: '-'

  # ScaleInCooldown:
  #   Type: Number
  # ScaleOutCooldown:
  #   Type: Number

Conditions:
  IsNotSSL: !Equals 
    - !Ref CertificateArn
    - '-'
  IsNotDev: !Not 
    - !Equals 
      - !FindInMap [ SystemEnvironmentMapping, !Ref SystemEnvironmentName,EnvironmentNameLower]
      - dev

  IsDev: !Equals 
    - !FindInMap [ SystemEnvironmentMapping, !Ref SystemEnvironmentName,EnvironmentNameLower]
    - dev

Resources:  
  TargetGroup01:
   Type: AWS::ElasticLoadBalancingV2::TargetGroup
   Properties: 
    HealthCheckPath: !Sub '/msa${ProjectNumber}/healthcheck.html' 
    HealthCheckProtocol: HTTP
    Name: !Sub '${ALBName}-test-TG01'    ###   ALB-YZK-MNT-WEB01-TG01   
    Port: !Ref Port #443
    Protocol: !If [ IsNotSSL, HTTP,HTTPS ] 
    TargetType: instance
    VpcId: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,VpcId]
    

  TargetGroup02:
   Type: AWS::ElasticLoadBalancingV2::TargetGroup
   Properties:
    HealthCheckPath: !Sub '/msa${ProjectNumber}/healthcheck.html' 
    HealthCheckProtocol: HTTP 
    Name: !Sub '${ALBName}-test-TG02'    ###   ALB-YZK-MNT-WEB01-TG02     
    Port: !Ref Port #443
    Protocol: !If [ IsNotSSL,HTTP,HTTPS ] 
    TargetType: instance
    VpcId: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,VpcId]  

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties: 
      Port: !Ref Port #443    
      Protocol: !If  [ IsNotSSL,HTTP,HTTPS ] 
      Certificates: !If
        - IsNotSSL
        - !Ref "AWS::NoValue"
        - 
          - CertificateArn: !Ref CertificateArn
      DefaultActions: 
        - TargetGroupArn: !Ref TargetGroup01
          Type: forward
      LoadBalancerArn: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,ALBWSPRXY01Arn]
      
  Repository:
    Type: AWS::ECR::Repository
    Properties: 
      RepositoryName: !Sub 
        - '${SystemNameLower}-${ProjectNameLower}-${EnvironmentNameLower}'  ## yzk-nginx-mnt
        - SystemNameLower: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,SystemNameLower]
          EnvironmentNameLower: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,EnvironmentNameLower]

      LifecyclePolicy: 
        LifecyclePolicyText: |
          {
            "rules":[
              {
                "rulePriority": 1,
                "description": "Keep two images, expire all others",
                "selection":{
                    "tagStatus":"any",
                    "countType":"imageCountMoreThan",
                    "countNumber": 2
                },
                "action":{
                    "type":"expire"
                }
              }
            ]
          }
        
      RepositoryPolicyText: !If 
        - IsDev
        - !Ref "AWS::NoValue"             
        - {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Sid": "ecr-deny-default",
                "Effect": "Deny",
                "Principal": {
                  "AWS": [
                    {
                      "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/${WebInstanceRoleName}"
                    },
                    {
                      "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/${BuildServiceRoleName}"
                    },
                    {
                      "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/${ExecutionRoleName}"
                    },
                    {
                      "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/service-role/${PipelineServiceRoleName}"
                    }
                  ]
                },
                "Action": "ecr:*",
                "Condition": {
                  "StringNotEquals": {
                    "aws:PrincipalTag/ecrAuth": "true",
                    "aws:sourceVpce": [
                      {
                        "Fn::FindInMap": [ SystemEnvironmentMapping, !Ref SystemEnvironmentName, VpcEndpointId01
                        ]
                      },
                      {
                        "Fn::FindInMap": [ SystemEnvironmentMapping, !Ref SystemEnvironmentName, VpcEndpointId02
                        ]
                      }
                    ]
                  }
                }
              },
              {
                "Sid": "AllAllow",
                "Effect": "Allow",
                "Principal": {
                  "AWS": [
                    {
                      "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/${WebInstanceRoleName}"
                    },
                    {
                      "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/${BuildServiceRoleName}"
                    },
                    {
                      "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/${ExecutionRoleName}"
                    },
                    {
                      "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/service-role/${PipelineServiceRoleName}"
                    }
                  ]
                },
                "Action": "ecr:*"
              }
            ]
          }  


  Taskdefinition:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      Family: !Sub 
      - '${SystemNameLower}-${ProjectNameLower}-task-${EnvironmentNameLower}'  ###yzk-nginx-task-mnt
      - SystemNameLower: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,SystemNameLower]
        EnvironmentNameLower: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,EnvironmentNameLower]
      ContainerDefinitions:
        - MemoryReservation: 300
          Image: !Sub 
            - '${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${SystemNameLower}-${ProjectNameLower}-${EnvironmentNameLower}:latest' ##'686681713577.dkr.ecr.ap-northeast-1.amazonaws.com/yzk-nginx-mnt:latest'
            - SystemNameLower: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,SystemNameLower]
              EnvironmentNameLower: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,EnvironmentNameLower]
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Sub 
                - 'Nginx-${SystemNameUpper}-${EnvironmentNameUpper}' ##Nginx-YZK-MNT
                - SystemNameUpper: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,SystemNameUpper]
                  EnvironmentNameUpper: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,EnvironmentNameUpper]
              awslogs-region: !Sub '${AWS::Region}'
          Name: !Sub 
            - '${SystemNameLower}-${ProjectNameLower}' ### yzk-nginx
            - SystemNameLower: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,SystemNameLower]
          PortMappings:
            - ContainerPort: !Ref Port ##443
              HostPort: 0
              Protocol: tcp
      ExecutionRoleArn: !Sub 'arn:aws:iam::${AWS::AccountId}:role/${ExecutionRoleName}'  
      NetworkMode: bridge
      TaskRoleArn: !Ref  TaskRoleName
      RequiresCompatibilities: 
        - 'EC2'

  DiscoveryService:
    Type: AWS::ServiceDiscovery::Service
    Properties: 
      DnsConfig:
        NamespaceId: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,NamespaceId]  
        RoutingPolicy: MULTIVALUE
        DnsRecords:
          - TTL: 60
            Type: SRV
      HealthCheckCustomConfig: 
        FailureThreshold: 1
      Name: !Sub 
        - '${SystemNameLower}-${ProjectNameLower}-service-${EnvironmentNameLower}'   ##yzk-nginx-service-mnt
        - SystemNameLower: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,SystemNameLower]
          EnvironmentNameLower: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,EnvironmentNameLower]

  Service:
    Type: AWS::ECS::Service
    DependsOn:  Listener
    Properties: 
      Cluster: !Sub 
        - 'ECS-${SystemNameUpper}-${EnvironmentNameUpper}-WEB${ClusterNumber}' ###
        - SystemNameUpper: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,SystemNameUpper]
          EnvironmentNameUpper: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,EnvironmentNameUpper]
      DeploymentController: 
        Type: !If [ IsNotDev, CODE_DEPLOY, ECS ]  
      DesiredCount: !Ref DesiredCount #0
      LaunchType: EC2
      LoadBalancers: 
        - ContainerName: !Sub 
          - '${SystemNameLower}-${ProjectNameLower}'   ##yzk-nginx
          - SystemNameLower: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,SystemNameLower]
          ContainerPort: !Ref Port ##443
          TargetGroupArn: !Ref TargetGroup01
      PlacementStrategies: 
        - Field: attribute:ecs.availability-zone
          Type: spread
        - Field: instanceId
          Type: spread
      SchedulingStrategy: REPLICA
      ServiceRegistries: 
        - ContainerName: !Sub 
          - '${SystemNameLower}-${ProjectNameLower}'  ##yzk-nginx
          - SystemNameLower: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,SystemNameLower]
          ContainerPort: !Ref Port ##443
          RegistryArn: !GetAtt DiscoveryService.Arn
      ServiceName: !Sub 
        - '${SystemNameLower}-${ProjectNameLower}-service-${EnvironmentNameLower}'  ###yzk-nginx-service-mnt
        - SystemNameLower: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,SystemNameLower]
          EnvironmentNameLower: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,EnvironmentNameLower]
      TaskDefinition: !Ref Taskdefinition


  ScalableTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    DependsOn: Service
    Properties:     
      MaxCapacity: !Ref MaxCapacity
      MinCapacity: !Ref MinCapacity
      ResourceId: !Sub 
        - 'service/ECS-${SystemNameUpper}-${EnvironmentNameUpper}-WEB${ClusterNumber}/${SystemNameLower}-${ProjectNameLower}-service-${EnvironmentNameLower}'  ##service/ECS-TKK-DEV-BAT$/yzk-nginx-service-mnt
        - SystemNameUpper: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,SystemNameUpper]
          EnvironmentNameUpper: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,EnvironmentNameUpper]
          SystemNameLower: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,SystemNameLower]
          EnvironmentNameLower: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,EnvironmentNameLower]
      RoleARN: !Sub 'arn:aws:iam::${AWS::AccountId}:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService' ##arn:aws:iam::012752345683:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs
    

  ScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties: 
      PolicyName: !Sub 
        - 'AS-${SystemNameUpper}-${EnvironmentNameUpper}-WEB${ClusterNumber}'  #####AS-YZK-MNT-WEB01
        - SystemNameUpper: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,SystemNameUpper]
          EnvironmentNameUpper: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,EnvironmentNameUpper]
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref ScalableTarget
      TargetTrackingScalingPolicyConfiguration: 
        TargetValue: !Ref TargetValue #70
        PredefinedMetricSpecification:
          PredefinedMetricType: ECSServiceAverageCPUUtilization
        # ScaleInCooldown: Integer
        # ScaleOutCooldown: Integer

  CodeBuild:
    Type: AWS::CodeBuild::Project
    DependsOn: Service
    Properties: 
      Name: !Sub 
        - '${SystemNameLower}-${ProjectNameLower}-codebuild-project-${EnvironmentNameLower}' ##yzk-nginx-codebuild-project-mnt
        - SystemNameLower: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,SystemNameLower]
          EnvironmentNameLower: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,EnvironmentNameLower]
      Artifacts: 
        Type: NO_ARTIFACTS
      Environment: 
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      ServiceRole: !Sub 'arn:aws:iam::${AWS::AccountId}:role/${BuildServiceRoleName}' 
      Source:
        Type: S3
        Location: !Sub '${BucketName01}/${ProjectNameLower}.zip'    ##irk-build-source-bucket-mnt/yzk-nginx.zip
      VpcConfig: 
        SecurityGroupIds: 
          - !Ref CodeBuildSecurityGroupId
        Subnets: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,Subnet]
        VpcId: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,VpcId]
      LogsConfig: 
          CloudWatchLogs: 
            Status: ENABLED
          S3Logs: 
            Status: DISABLED 

  CodeDeployApp:  
    Type: AWS::CodeDeploy::Application
    Condition: IsNotDev    
    Properties: 
      ApplicationName: !Sub 
        - 'AppECS-ECS-${SystemNameUpper}-${EnvironmentNameUpper}-WEB${ClusterNumber}-${SystemNameLower}-${ProjectNameLower}-service-${EnvironmentNameLower}' ##AppECS-ECS-IRK-MNT-WEB01-yzk-nginx-service-mnt
        - SystemNameUpper: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,SystemNameUpper]
          EnvironmentNameUpper: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,EnvironmentNameUpper]
          SystemNameLower: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,SystemNameLower]
          EnvironmentNameLower: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,EnvironmentNameLower]
      ComputePlatform: ECS

  CodeDeployGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    Condition: IsNotDev    
    DependsOn: CodeBuild
    Properties: 
      DeploymentGroupName: !Sub 
        - 'DgpECS-ECS-${SystemNameUpper}-${EnvironmentNameUpper}-WEB${ClusterNumber}-${SystemNameLower}-${ProjectNameLower}-service-${EnvironmentNameLower}' ##DgpECS-ECS-IRK-MNT-WEB01-yzk-nginx-service-mnt
        - SystemNameUpper: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,SystemNameUpper]
          EnvironmentNameUpper: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,EnvironmentNameUpper]
          SystemNameLower: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,SystemNameLower]
          EnvironmentNameLower: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,EnvironmentNameLower]
      ApplicationName: !Ref CodeDeployApp
      AutoRollbackConfiguration: 
          Enabled: true
          Events: 
            - DEPLOYMENT_FAILURE   
      BlueGreenDeploymentConfiguration: 
        DeploymentReadyOption: 
          ActionOnTimeout: CONTINUE_DEPLOYMENT
        TerminateBlueInstancesOnDeploymentSuccess: 
          Action: TERMINATE
          TerminationWaitTimeInMinutes: 5
      DeploymentStyle: 
        DeploymentOption: WITH_TRAFFIC_CONTROL
        DeploymentType: BLUE_GREEN
      ECSServices: 
        - ClusterName: !Sub 
            - 'ECS-${SystemNameUpper}-${EnvironmentNameUpper}-WEB${ClusterNumber}' 
            - SystemNameUpper: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,SystemNameUpper]
              EnvironmentNameUpper: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,EnvironmentNameUpper]
          ServiceName: !GetAtt Service.Name 
      LoadBalancerInfo: 
          TargetGroupPairInfoList: 
            - ProdTrafficRoute: 
                  ListenerArns: 
                    - !Ref Listener
              TargetGroups: 
                - Name: !Sub '${ALBName}-TG01'    ###   ALB-YZK-MNT-WEB01-TG01   
                - Name: !Sub '${ALBName}-TG02'    ###   ALB-YZK-MNT-WEB01-TG02   
      ServiceRoleArn: !Sub 'arn:aws:iam::${AWS::AccountId}:role/${DeployServiceRoleName}'   

  Pipeline: 
    Type: AWS::CodePipeline::Pipeline
    Properties: 
      Name: !Sub 
        - '${SystemNameLower}-${ProjectNameLower}-pipeline-${EnvironmentNameLower}' ##yzk-nginx-pipeline-mnt
        - SystemNameLower: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,SystemNameLower]
          EnvironmentNameLower: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,EnvironmentNameLower]
      RoleArn: !Sub 'arn:aws:iam::${AWS::AccountId}:role/service-role/${PipelineServiceRoleName}'
      ArtifactStore: 
        Location: !Ref BucketName01
        Type: S3
      Stages: 
        - 
          Name: Source
          Actions: 
            -  
              Name: Source
              Namespace: !If [ IsNotDev, SourceVariables, !Ref "AWS::NoValue"]
              ActionTypeId: 
                Category: Source
                Owner: AWS
                Provider: S3
                Version: 1
              OutputArtifacts: 
                - Name: SourceArtifact
              Configuration: 
                S3Bucket: !Ref BucketName01
                S3ObjectKey: !Sub 
                  - '${SystemNameUpper}-${ProjectNameLower}-${ProjectNumber}.zip' 
                  - SystemNameUpper: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,SystemNameUpper]
                PollForSourceChanges: true
        - 
          Name: Build
          Actions: 
            -   
              Name: Build
              Namespace: BuildVariables
              ActionTypeId: 
                  Category: Build
                  Owner: AWS
                  Provider: CodeBuild
                  Version: 1
              Configuration: 
                ProjectName: !Sub 
                - '${SystemNameLower}-${ProjectNameLower}-codebuild-project-${EnvironmentNameLower}' ##yzk-nginx-codebuild-project-mnt
                - SystemNameLower: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,SystemNameLower]
                  EnvironmentNameLower: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,EnvironmentNameLower]                
              InputArtifacts: 
                - Name: SourceArtifact
              OutputArtifacts: 
                - Name: BuildArtifact
              Region: !Sub '${AWS::Region}'
        -
          !If
            - IsNotDev
            -
              Name: Deploy
              Actions: 
                - 
                  Name: Deploy
                  Namespace: DeployVariables
                  ActionTypeId: 
                      Category: Deploy
                      Owner: AWS
                      Provider: CodeDeployToECS
                      Version: 1
                  Configuration: 
                    ApplicationName: !Ref CodeDeployApp
                    DeploymentGroupName: !Ref CodeDeployGroup
                    AppSpecTemplateArtifact: BuildArtifact
                    AppSpecTemplatePath: appspec.yaml
                    TaskDefinitionTemplatePath: taskdef.json
                    TaskDefinitionTemplateArtifact: BuildArtifact
                    Image1ArtifactName: BuildArtifact
                    Image1ContainerName: IMAGE1_NAME
                  InputArtifacts: 
                    - Name: BuildArtifact
                  Region: !Sub '${AWS::Region}'
            - 
              Name: Deploy
              Actions: 
                - 
                  Name: Deploy
                  ActionTypeId: 
                      Category: Deploy
                      Owner: AWS
                      Provider: ECS 
                      Version: 1
                  Configuration: 
                    ClusterName: !Sub 
                      - 'ECS-${SystemNameUpper}-${EnvironmentNameUpper}-WEB${ClusterNumber}' 
                      - SystemNameUpper: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,SystemNameUpper]
                        EnvironmentNameUpper: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,EnvironmentNameUpper]
                    ServiceName: !GetAtt Service.Name
                    FileName: imageDetail.json
                  InputArtifacts: 
                    - Name: BuildArtifact
                  Region: !Sub '${AWS::Region}'
          # Name: Deploy
          # Actions: 
          #   - 
          #     Name: Deploy
          #     Namespace: DeployVariables
          #     ActionTypeId: 
          #         Category: Deploy
          #         Owner: AWS
          #         Provider: CodeDeployToECS
          #         Version: 1
          #     Configuration: 
          #       ApplicationName: !Sub 
          #       - 'AppECS-ECS-${SystemNameUpper}-${EnvironmentNameUpper}-WEB${ClusterNumber}-${SystemNameLower}-${ProjectNameLower}-service-${EnvironmentNameLower}' ##AppECS-ECS-IRK-MNT-WEB01-yzk-nginx-service-mnt
          #       - SystemNameUpper: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,SystemNameUpper]
          #         EnvironmentNameUpper: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,EnvironmentNameUpper]
          #         SystemNameLower: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,SystemNameLower]
          #         EnvironmentNameLower: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,EnvironmentNameLower]
          #       DeploymentGroupName: !Sub 
          #       - 'DgpECS-ECS-${SystemNameUpper}-${EnvironmentNameUpper}-WEB${ClusterNumber}-${SystemNameLower}-${ProjectNameLower}-service-${EnvironmentNameLower}' ##DgpECS-ECS-IRK-MNT-WEB01-yzk-nginx-service-mnt
          #       - SystemNameUpper: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,SystemNameUpper]
          #         EnvironmentNameUpper: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,EnvironmentNameUpper]
          #         SystemNameLower: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,SystemNameLower]
          #         EnvironmentNameLower: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,EnvironmentNameLower]            
          #       AppSpecTemplateArtifact: BuildArtifact
          #       AppSpecTemplatePath: appspec.yaml
          #       TaskDefinitionTemplatePath: taskdef.json
          #       TaskDefinitionTemplateArtifact: BuildArtifact
          #       Image1ArtifactName: BuildArtifact
          #       Image1ContainerName: IMAGE1_NAME
          #     InputArtifacts: 
          #       - Name: BuildArtifact
          #     Region: !Sub '${AWS::Region}'
  LogGroup:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties: 
      KmsKeyId: !Sub 
        - 'arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/${KmsKeyId}' 
        - KmsKeyId: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,KmsKeyId]
      LogGroupName: !Sub 
        - 'Nginx-${SystemNameUpper}-${EnvironmentNameUpper}' 
        - SystemNameUpper: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,SystemNameUpper] ##Nginx-YZK-MNT
          EnvironmentNameUpper: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,EnvironmentNameUpper]
      RetentionInDays: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,LogGroupRetentionInDays]