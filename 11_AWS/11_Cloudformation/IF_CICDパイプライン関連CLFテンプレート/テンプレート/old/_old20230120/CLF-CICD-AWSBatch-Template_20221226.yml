#############################################################
# Copyright 2019 FUJITSU LIMITED
# FileName: CLF-CICD-AWSBatch-Template.yml
# FileType: YAML
# OverViews: CloudFormation Template for AWSbatch CI/CD
# Version: 1.0
# Author: Fujitsu - hou
#############################################################

AWSTemplateFormatVersion: "2010-09-09"
Transform:
  Name: 'AWS::Include'
  Parameters:
    Location: !Sub 's3://${BucketName02}/output_Mappings_AWSBatch.yml'



Parameters:
  #  ## user form  ##
  #  :param SystemEnvironmentName:['TKKDEV','TKKMNT','TKKSTG','IRKDEV','IRKMNT','IRKSTG','YZKDEV','YZKMNT','YZKSTG','OQSDEV','OQSMNT','OQSSTG']
  #  :param ProjectNumber:[Example:'99999']
  #  :param BucketName01:['tkk-build-source-bucket-dev1','tkk-build-source-bucket-stg','irk-build-source-bucket-mnt','irk-build-source-bucket-stg''yzk-build-source-bucket-stg','build-source-bucket-dev','build-source-bucket-mnt','build-source-bucket-stg']
  #  :param BucketName02: ['s3-tkk-dev-cfn01','s3-tkk-stg-cfn01','s3-irk-mnt-cfn01','s3-irk-stg-cfn01','s3-yzk-stg-cfn01','s3-oqs-dev-clf01','s3-oqs-mnt-clf01','s3-oqs-stg-clf01']


  SystemEnvironmentName: 
    Type: String
    Default: 'OQSDEV'
    AllowedValues: ['TKKDEV','TKKMNT','TKKSTG','IRKDEV','IRKMNT','IRKSTG','YZKDEV','YZKMNT','YZKSTG','OQSDEV','OQSMNT','OQSSTG']
  ProjectNumber:
    Type: Number
    Description: 'Example:99999'
  BucketName01: 
    Type: String
    Default: 'build-source-bucket-dev'
    AllowedValues: ['tkk-build-source-bucket-dev1','tkk-build-source-bucket-stg','irk-build-source-bucket-mnt','irk-build-source-bucket-stg''yzk-build-source-bucket-stg','build-source-bucket-dev','build-source-bucket-mnt','build-source-bucket-stg']    
  BucketName02: 
    Type: String
    Default: 's3-oqs-dev-clf01'
    AllowedValues: ['s3-tkk-dev-cfn01','s3-tkk-stg-cfn01','s3-irk-mnt-cfn01','s3-irk-stg-cfn01','s3-yzk-stg-cfn01','s3-oqs-dev-clf01','s3-oqs-mnt-clf01','s3-oqs-stg-clf01']


Conditions:
  IsOqs: !Equals 
    - !FindInMap [ SystemEnvironmentMapping,!Ref SystemEnvironmentName,SystemNameLower ]
    - oqs

  IsDev: !Equals 
    - !FindInMap [ SystemEnvironmentMapping, !Ref SystemEnvironmentName,EnvironmentNameLower]
    - dev

Resources:  
  Repository:
    Type: AWS::ECR::Repository
    Properties: 
      RepositoryName: !Sub 
        - '${SystemNameLower}-msa${ProjectNumber}-${EnvironmentNameLower}'
        - SystemNameLower: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,SystemNameLower]
          EnvironmentNameLower: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,EnvironmentNameLower]
      LifecyclePolicy: 
        LifecyclePolicyText: |
          {
            "rules": [
              {
                "rulePriority": 1,
                "description": "Keep two images, expire all others",
                "selection": {
                  "tagStatus": "any",
                  "countType": "imageCountMoreThan",
                  "countNumber": 2
                },
                "action": {
                  "type": "expire"
                }
              }
            ]
          }
      RepositoryPolicyText: !If
      - IsOqs
      - {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "specific-VPCE-OR-User-only",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "ecr:*",
              "Condition": {
                "StringNotEquals": {
                  "aws:PrincipalTag/ecrAuth": "true",
                  "aws:sourceVpce": [
                    {
                      "Fn::FindInMap": [SystemEnvironmentMapping,!Ref SystemEnvironmentName, VpcEndpointId01 ]
                    },
                    {
                      "Fn::FindInMap": [SystemEnvironmentMapping,!Ref SystemEnvironmentName, VpcEndpointId02 ]
                    }
                  ]
                }
              }
            }
          ]
        }
      - !If
        - IsDev
        - !Ref "AWS::NoValue"
        - {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Sid": "ecr-deny-default",
                "Effect": "Deny",
                "Principal": {
                  "AWS": [
                    {
                      "Fn::Sub": [
                        "arn:aws:iam::${AWS::AccountId}:role/${AwsBatInstanceRoleName}",
                        {
                          "AwsBatInstanceRoleName": {
                            "Fn::FindInMap": [ SystemEnvironmentMapping, !Ref SystemEnvironmentName, AwsBatInstanceRoleName ]
                          }
                        }
                      ]
                    },
                    {
                      "Fn::Sub": [
                        "arn:aws:iam::${AWS::AccountId}:role/${BuildServiceRoleName}",
                        {
                          "BuildServiceRoleName": {
                            "Fn::FindInMap": [ SystemEnvironmentMapping, !Ref SystemEnvironmentName, BuildServiceRoleName ]
                          }
                        }
                      ]
                    },
                    {
                      "Fn::Sub": [
                        "arn:aws:iam::${AWS::AccountId}:role/${PipelineServiceRoleName}",
                        {
                          "PipelineServiceRoleName": {
                            "Fn::FindInMap": [ SystemEnvironmentMapping, !Ref SystemEnvironmentName, PipelineServiceRoleName ]
                          }
                        }
                      ]
                    }
                  ]
                },
                "Action": "ecr:*",
                "Condition": {
                  "StringNotEquals": {
                    "aws:PrincipalTag/ecrAuth": "true",
                    "aws:sourceVpce": [
                      {
                        "Fn::FindInMap": [ SystemEnvironmentMapping, !Ref SystemEnvironmentName, VpcEndpointId01 ]
                      },
                      {
                        "Fn::FindInMap": [ SystemEnvironmentMapping, !Ref SystemEnvironmentName, VpcEndpointId02 ]
                      }
                    ]
                  }
                }
              },
              {
                "Sid": "AllAllow",
                "Effect": "Allow",
                "Principal": {
                  "AWS": [
                    {
                      "Fn::Sub": [
                        "arn:aws:iam::${AWS::AccountId}:role/${AwsBatInstanceRoleName}",
                        {
                          "AwsBatInstanceRoleName": {
                            "Fn::FindInMap": [ SystemEnvironmentMapping, !Ref SystemEnvironmentName, AwsBatInstanceRoleName ]
                          }
                        }
                      ]
                    },
                    {
                      "Fn::Sub": [
                        "arn:aws:iam::${AWS::AccountId}:role/${BuildServiceRoleName}",
                        {
                          "BuildServiceRoleName": {
                            "Fn::FindInMap": [ SystemEnvironmentMapping, !Ref SystemEnvironmentName, BuildServiceRoleName ]
                          }
                        }
                      ]
                    },
                    {
                      "Fn::Sub": [
                        "arn:aws:iam::${AWS::AccountId}:role/${PipelineServiceRoleName}",
                        {
                          "PipelineServiceRoleName": {
                            "Fn::FindInMap": [ SystemEnvironmentMapping, !Ref SystemEnvironmentName, PipelineServiceRoleName ]
                          }
                        }
                      ]
                    }
                  ]
                },
                "Action": "ecr:*"
              }
            ]
          }


  CodeBuild:
    Type: AWS::CodeBuild::Project
    Properties: 
      Name: !Sub 
        - '${SystemNameLower}-msa${ProjectNumber}-codebuild-project-${EnvironmentNameLower}'
        - SystemNameLower: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,SystemNameLower]
          EnvironmentNameLower: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,EnvironmentNameLower]
      Artifacts: 
        Type: NO_ARTIFACTS
      Environment: 
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      ServiceRole: !Sub 
        - 'arn:aws:iam::${AWS::AccountId}:role/${BuildServiceRoleName}'
        - BuildServiceRoleName: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,BuildServiceRoleName]
      Source:
        Type: S3
        Location: !Sub 
          - '${BucketName01}/${SystemNameUpper}-MSA${ProjectNumber}.zip'
          - SystemNameUpper: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,SystemNameUpper]        
      VpcConfig: 
        SecurityGroupIds: 
          - !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,SecurityGroupId]
        Subnets: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,Subnet]
        VpcId: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,VpcId]
      LogsConfig: 
          CloudWatchLogs: 
            Status: ENABLED
          S3Logs: 
            Status: DISABLED 
      Tags: !If 
        - isOqs
        - 
          - Key: "Name"
            Value: "CRED_CHECK"
        - !Ref "AWS::NoValue"

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties: 
      Name: !Sub 
        - '${SystemNameLower}-msa${ProjectNumber}-pipeline-${EnvironmentNameLower}'
        - SystemNameLower: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,SystemNameLower]
          EnvironmentNameLower: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,EnvironmentNameLower]
      RoleArn: !Sub 
        - 'arn:aws:iam::${AWS::AccountId}:role/${PipelineServiceRoleName}'
        -  PipelineServiceRoleName: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,PipelineServiceRoleName]
      ArtifactStore: 
        Location: !Ref BucketName01
        Type: S3
      Stages: 
        - 
          Name: Source
          Actions: 
            -  
              Name: Source
              Namespace: SourceVariables
              ActionTypeId: 
                Category: Source
                Owner: AWS
                Provider: S3
                Version: 1
              OutputArtifacts: 
                - Name: SourceArtifact
              Configuration: 
                S3Bucket: !Ref BucketName01
                S3ObjectKey: !Sub 
                  - '${SystemNameUpper}-MSA${ProjectNumber}.zip' 
                  - SystemNameUpper: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,SystemNameUpper]
                PollForSourceChanges: true
        - 
          Name: Build
          Actions: 
            -   
              Name: Build
              Namespace: BuildVariables
              ActionTypeId: 
                  Category: Build
                  Owner: AWS
                  Provider: CodeBuild
                  Version: 1
              Configuration: 
                ProjectName: !Sub 
                  - '${SystemNameLower}-msa${ProjectNumber}-codebuild-project-${EnvironmentNameLower}'  
                  - SystemNameLower: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,SystemNameLower]
                    EnvironmentNameLower: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,EnvironmentNameLower]
              InputArtifacts: 
                - Name: SourceArtifact
              OutputArtifacts: 
                - Name: BuildArtifact
              Region: !Sub '${AWS::Region}'

  LogGroup:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties: 
      KmsKeyId: !Sub 
        - 'arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/${KmsKeyId}'
        - KmsKeyId: !FindInMap [ SystemEnvironmentMapping, !Ref SystemEnvironmentName, KmsKeyId ]
      LogGroupName: !If 
          - IsOqs
          - !Sub 
            - '/aws/batch/job/${EnvironmentNameLower}/msa${ProjectNumber}'
            - EnvironmentNameLower: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,EnvironmentNameLower] 
          - !Sub 
            - 'MSA${ProjectNumber}-${SystemNameUpper}-${EnvironmentNameUpper}'
            - EnvironmentNameUpper: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,EnvironmentNameUpper]
              SystemNameUpper: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,SystemNameUpper]
      RetentionInDays: !FindInMap [SystemEnvironmentMapping,!Ref SystemEnvironmentName,LogGroupRetentionInDays]